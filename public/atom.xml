<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iyihua</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-10T15:18:20.132Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Wanglv Yihua</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【转】-支付宝架构与技术</title>
    <link href="http://yoursite.com/2016/08/10/%E3%80%90%E8%BD%AC%E3%80%91-%E6%94%AF%E4%BB%98%E5%AE%9D%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    <id>http://yoursite.com/2016/08/10/【转】-支付宝架构与技术/</id>
    <published>2016-08-10T03:07:13.000Z</published>
    <updated>2016-08-10T15:18:20.132Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-001.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-002.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-003.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-004.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-005.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-006.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-007.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-008.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-009.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-010.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-011.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-012.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-013.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-014.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-015.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-016.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-017.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-018.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-019.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-020.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-021.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-022.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-023.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-024.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-025.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-026.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-027.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-028.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-029.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;支付宝的开源分布式消息中间件–Metamorphosis(MetaQ)&lt;br&gt;　　Metamorphosis (MetaQ) 是一个高性能、高可用、可扩展的分布式消息中间件，类似于LinkedIn的Kafka，具有消息存储顺序写、吞吐量大和支持本地和XA事务等特性，适用于大吞吐量、顺序消息、广播和日志数据传输等场景，在淘宝和支付宝有着广泛的应用，现已开源。&lt;br&gt;　　Metamorphosis是淘宝开源的一个Java消息中间件。关于消息中间件，你应该听说过JMS规范，以及一些开源实现，如ActiveMQ和HornetQ等。Metamorphosis也是其中之一。&lt;br&gt;　　Metamorphosis的起源是我从对linkedin的开源MQ–现在转移到apache的kafka的学习开始的，这是一个设计很独特的MQ系统，它采用pull机制，而不是一般MQ的push模型，它大量利用了zookeeper做服务发现和offset存储，它的设计理念我非常欣赏并赞同，强烈建议你阅读一下它的设计文档，总体上说metamorphosis的设计跟它是完全一致的。但是为什么还需要meta呢？&lt;br&gt;　　简单概括下我重新写出meta的原因：&lt;br&gt;　　Kafka是scala写，我对scala不熟悉，并且kafka整个社区的发展太缓慢了。&lt;br&gt;　　有一些功能是kakfa没有实现，但是我们却需要：事务、多种offset存储、高可用方案(HA)等&lt;br&gt;　　Meta相对于kafka特有的一些功能：&lt;br&gt;　　文本协议设计，非常透明，支持类似memcached stats的协议来监控broker&lt;br&gt;　　纯Java实现，从通讯到存储，从client到server都是重新实现。&lt;br&gt;　　提供事务支持，包括本地事务和XA分布式事务&lt;br&gt;　　支持HA复制，包括异步复制和同步复制，保证消息的可靠性&lt;br&gt;　　支持异步发送消息&lt;br&gt;　　消费消息失败，支持本地恢复&lt;br&gt;　　多种offset存储支持，数据库、磁盘、zookeeper，可自定义实现&lt;br&gt;　　支持group commit，提升数据可靠性和吞吐量。&lt;br&gt;　　支持消息广播模式&lt;br&gt;　　一系列配套项目：python客户端、twitter storm的spout、tail4j等。&lt;br&gt;　　因此meta相比于kafka的提升是巨大的。meta在淘宝和支付宝都得到了广泛应用，现在每天支付宝每天经由meta路由的消息达到120亿，淘宝也有每天也有上亿的消息量。&lt;br&gt;　　Meta适合的应用：&lt;br&gt;　　日志传输，高吞吐量的日志传输本来就是kafka的强项&lt;br&gt;　　消息广播功能，如广播缓存配置失效。&lt;br&gt;　　数据的顺序同步功能，如mysql binlog复制&lt;br&gt;　　分布式环境下（broker,producer,consumer都为集群）的消息路由，对顺序和可靠性有极高要求的场景。&lt;br&gt;　　作为一般MQ来使用的其他功能&lt;/p&gt;
&lt;p&gt;总体结构：&lt;br&gt;&lt;img src=&quot;/images/frame-zhifubao-030.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;内部结构：&lt;br&gt;&lt;img src=&quot;/images/frame-zhifubao-031.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-001.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame-zhifubao-002.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/frame
    
    </summary>
    
    
      <category term="支付宝" scheme="http://yoursite.com/tags/%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>系统分布式情况下最终一致性方案梳理</title>
    <link href="http://yoursite.com/2016/08/10/%E7%B3%BB%E7%BB%9F%E5%88%86%E5%B8%83%E5%BC%8F%E6%83%85%E5%86%B5%E4%B8%8B%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E6%96%B9%E6%A1%88%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2016/08/10/系统分布式情况下最终一致性方案梳理/</id>
    <published>2016-08-10T02:14:29.000Z</published>
    <updated>2016-08-10T15:15:57.211Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前的应用系统，不管是企业级应用还是互联网应用，最终数据的一致性是每个应用系统都要面临的问题，随着分布式的逐渐普及，数据一致性更加艰难，但是也很难有银弹的解决方案，也并不是引入特定的中间件或者特定的开源框架能够解决的，更多的还是看业务场景，根据场景来给出解决方案。根据笔者最近几年的了解，总结了几个点，更多的应用系统在编码的时候，更加关注数据的一致性，这样系统才是健壮的。&lt;/p&gt;
&lt;h2 id=&quot;基础理论相关&quot;&gt;&lt;a href=&quot;#基础理论相关&quot; class=&quot;headerlink&quot; title=&quot;基础理论相关&quot;&gt;&lt;/a&gt;基础理论相关&lt;/h2&gt;&lt;p&gt;说起事务，目前的几个理论，ACID事务特性，CAP分布式理论，以及BASE等，ACID在数据库事务中体现，CAP和BASE则是分布式事务的理论，结合业务系统，例如订单管理，例如仓储管理等，可以借鉴这些理论，从而解决问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ACID 特性&lt;br&gt;A（原子性）事务的原子操作单元，对数据的修改，要么全部执行，要么全部不执行；&lt;br&gt;C（一致性）在事务开始和完成时，数据必须保持一致状态，相关的数据规则必须应用于事务的修改，以保证数据的完整性，事务结束时，所有的内部数据结构必须正确；&lt;br&gt;I（隔离性）保证事务不受外部并发操作的独立环境执行；&lt;br&gt;D（持久性）事务完成之后，对于数据的修改是永久的，即使系统出现故障也能够保持；&lt;/li&gt;
&lt;li&gt;CAP&lt;br&gt;C（一致性）一致性是指数据的原子性，在经典的数据库中通过事务来保障，事务完成时，无论成功或回滚，数据都会处于一致的状态，在分布式环境下，一致性是指多个节点数据是否一致；&lt;br&gt;A（可用性）服务一直保持可用的状态，当用户发出一个请求，服务能在一定的时间内返回结果；&lt;br&gt;P（分区容忍性）在分布式应用中，可能因为一些分布式的原因导致系统无法运转，好的分区容忍性，使应用虽然是一个分布式系统，但是好像一个可以正常运转的整体&lt;/li&gt;
&lt;li&gt;BASE&lt;br&gt;BA: Basic Availability 基本业务可用性；&lt;br&gt;S: Soft state 柔性状态；&lt;br&gt;E: Eventual consistency 最终一致性；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;最终一致性的几种做法&quot;&gt;&lt;a href=&quot;#最终一致性的几种做法&quot; class=&quot;headerlink&quot; title=&quot;最终一致性的几种做法&quot;&gt;&lt;/a&gt;最终一致性的几种做法&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/transaction-001.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;单数据库情况下的事务&quot;&gt;&lt;a href=&quot;#单数据库情况下的事务&quot; class=&quot;headerlink&quot; title=&quot;单数据库情况下的事务&quot;&gt;&lt;/a&gt;单数据库情况下的事务&lt;/h3&gt;&lt;p&gt;如果应用系统是单一的数据库，那么这个很好保证，利用数据库的事务特性来满足事务的一致性，这时候的一致性是强一致性的。对于java应用系统来讲，很少直接通过事务的start和commit以及rollback来硬编码，大多通过spring的事务模板或者声明式事务来保证。&lt;/p&gt;
&lt;h3 id=&quot;基于事务型消息队列的最终一致性&quot;&gt;&lt;a href=&quot;#基于事务型消息队列的最终一致性&quot; class=&quot;headerlink&quot; title=&quot;基于事务型消息队列的最终一致性&quot;&gt;&lt;/a&gt;基于事务型消息队列的最终一致性&lt;/h3&gt;&lt;p&gt;借助消息队列，在处理业务逻辑的地方，发送消息，业务逻辑处理成功后，提交消息，确保消息是发送成功的，之后消息队列投递来进行处理，如果成功，则结束，如果没有成功，则重试，直到成功，不过仅仅适用业务逻辑中，第一阶段成功，第二阶段必须成功的场景。对应上图中的C流程。&lt;/p&gt;
&lt;h3 id=&quot;基于消息队列-定时补偿机制的最终一致性&quot;&gt;&lt;a href=&quot;#基于消息队列-定时补偿机制的最终一致性&quot; class=&quot;headerlink&quot; title=&quot;基于消息队列+定时补偿机制的最终一致性&quot;&gt;&lt;/a&gt;基于消息队列+定时补偿机制的最终一致性&lt;/h3&gt;&lt;p&gt;前面部分和上面基于事务型消息的队列，不同的是，第二阶段重试的地方，不再是消息中间件自身的重试逻辑了，而是单独的补偿任务机制。其实在大多数的逻辑中，第二阶段失败的概率比较小，所以单独独立补偿任务表出来，可以更加清晰，能够比较明确的直到当前多少任务是失败的。对应上图的E流程。&lt;/p&gt;
&lt;h3 id=&quot;业务系统业务逻辑的commit-rollback机制&quot;&gt;&lt;a href=&quot;#业务系统业务逻辑的commit-rollback机制&quot; class=&quot;headerlink&quot; title=&quot;业务系统业务逻辑的commit/rollback机制&quot;&gt;&lt;/a&gt;业务系统业务逻辑的commit/rollback机制&lt;/h3&gt;&lt;p&gt;这一点说的话确实不难，commit和rollback是数据库事务中的比较典型的概念，但是在系统分布式情况下，需要业务代码中实现这种，成功了commit，失败了rollback。&lt;/p&gt;
&lt;h3 id=&quot;业务应用系统的幂等性控制&quot;&gt;&lt;a href=&quot;#业务应用系统的幂等性控制&quot; class=&quot;headerlink&quot; title=&quot;业务应用系统的幂等性控制&quot;&gt;&lt;/a&gt;业务应用系统的幂等性控制&lt;/h3&gt;&lt;p&gt;为啥要做幂等呢？ 原因很简单，在系统调用没有达到期望的结果后，会重试。那重试就会面临问题，重试之后不能给业务逻辑带来影响，例如创建订单，第一次调用超时了，但是调用的系统不知道超时了是成功了还是失败了，然后他就重试，但是实际上第一次调用订单创建是成功了的，这时候重试了，显然不能再创建订单了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查询&lt;br&gt;查询的API，可以说是天然的幂等性，因为你查询一次和查询两次，对于系统来讲，没有任何数据的变更，所以，查询一次和查询多次一样的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MVCC方案&lt;br&gt;多版本并发控制，update with condition，更新带条件，这也是在系统设计的时候，合理的选择乐观锁，通过version或者其他条件，来做乐观锁，这样保证更新及时在并发的情况下，也不会有太大的问题。例如update tablexxx set name=#name#,version=version+1 where version=#version# ,或者是 update tablexxx set quality=quality-#subQuality# where quality-#subQuality# &amp;gt;= 0 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;单独的去重表&lt;br&gt;如果涉及到的去重的地方特别多，例如ERP系统中有各种各样的业务单据，每一种业务单据都需要去重，这时候，可以单独搞一张去重表，在插入数据的时候，插入去重表，利用数据库的唯一索引特性，保证唯一的逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分布式锁&lt;br&gt;还是拿插入数据的例子，如果是分布是系统，构建唯一索引比较困难，例如唯一性的字段没法确定，这时候可以引入分布式锁，通过第三方的系统，在业务系统插入数据或者更新数据，获取分布式锁，然后做操作，之后释放锁，这样其实是把多线程并发的锁的思路，引入多多个系统，也就是分布式系统中得解决思路。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除数据&lt;br&gt;删除数据，仅仅第一次删除是真正的操作数据，第二次甚至第三次删除，直接返回成功，这样保证了幂等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插入数据的唯一索引&lt;br&gt;插入数据的唯一性，可以通过业务主键来进行约束，例如一个特定的业务场景，三个字段肯定确定唯一性，那么，可以在数据库表添加唯一索引来进行标示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API层面的幂等&lt;br&gt;这里有一个场景，API层面的幂等，例如提交数据，如何控制重复提交，这里可以在提交数据的form表单或者客户端软件，增加一个唯一标示，然后服务端，根据这个UUID来进行去重，这样就能比较好的做到API层面的唯一标示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态机幂等&lt;br&gt;在设计单据相关的业务，或者是任务相关的业务，肯定会涉及到状态机，就是业务单据上面有个状态，状态在不同的情况下会发生变更，一般情况下存在有限状态机，这时候，如果状态机已经处于下一个状态，这时候来了一个上一个状态的变更，理论上是不能够变更的，这样的话，保证了有限状态机的幂等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;异步回调机制的引入&quot;&gt;&lt;a href=&quot;#异步回调机制的引入&quot; class=&quot;headerlink&quot; title=&quot;异步回调机制的引入&quot;&gt;&lt;/a&gt;异步回调机制的引入&lt;/h3&gt;&lt;p&gt;A应用调用B，在同步调用的返回结果中，B返回成功给到A，一般情况下，这时候就结束了，其实在99.99%的情况是没问题的，但是有时候为了确保100%，记住最起码在系统设计中100%，这时候B系统再回调A一下，告诉A，你调用我的逻辑，确实成功了。其实这个逻辑，非常类似TCP协议中的三次握手。上图中的B流程。&lt;/p&gt;
&lt;h3 id=&quot;类似double-check机制的确认机制&quot;&gt;&lt;a href=&quot;#类似double-check机制的确认机制&quot; class=&quot;headerlink&quot; title=&quot;类似double check机制的确认机制&quot;&gt;&lt;/a&gt;类似double check机制的确认机制&lt;/h3&gt;&lt;p&gt;还是上图中异步回调的过程，A在同步调用B，B返回成功了。这次调用结束了，但是A为了确保，在过一段时间，这个时间可以是几秒，也可以是每天定时处理，再调用B一次，查询一下之前的那次调用是否成功。例如A调用B更新订单状态，这时候成功了，延迟几秒后，A查询B，确认一下状态是否是自己刚刚期望的。上图中的D流程。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;上面的几点总结，更多的在业务系统中体现，在超复杂的系统中，数据的一致性，不是说简单的引入啥中间件能够解决的，更多的是根据业务场景，来灵活应对。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前的应用系统，不管是企业级应用还是互联网应用，最终数据的一致性是每个应用系统都要面临的问题，随着分布式的逐渐普及，数据一致性更加艰难，但是
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SOA分布式事务解决方案</title>
    <link href="http://yoursite.com/2016/08/10/SOA%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2016/08/10/SOA分布式事务解决方案/</id>
    <published>2016-08-10T01:48:30.000Z</published>
    <updated>2016-08-10T15:15:57.203Z</updated>
    
    <content type="html">&lt;p&gt;这里是转的一段摘录：&lt;/p&gt;
&lt;p&gt;传统分布式系统与当代的面向SOA的分布式系统有一定区别，论概念上来讲SOA是以服务为中心，既然以服务为中心就会有很多面向服务的设计原则。而传统的分布式系统没有服务的概念，也没有所谓的一切皆是服务的原则。而当代SOA则首要原则就要以服务为中心，针对服务的设计又有了很多服务设计原则。&lt;br&gt;SOA对服务还进行了类型的划分，按照服务的应用层次来分类：业务服务、组合服务、应用服务，包装服务等。再按照管理与运维的层面来分类：控制服务、调度服务、监控服务等等。传统的分布式系统是没有这些的，我们谈论的是当代SOA的分布式系统，所以我们强调的是以服务为中心，以服务设计原则为架构设计的指导要求，当代SOA是对传统分布式系统的一个迭代进化，不是一个时代的产物，SOA更加强调了以服务为首要原则，已经提升到了另外一个更加高级的层面。&lt;br&gt;本节我们交流一下在当代SOA分布式系统中的数据一致性问题，在SOA中这主要涉及两个层面来考虑，一个是服务层面、一个数据持久化层面。再按照一致性的基本要求，可以分为：读一致性、写一致性、会话一致性、最终一致性、实时一致性等几个维度，当然还有其他几个维度的一致性要求。&lt;br&gt;我们这里重点讨论在企业应用中实施SOA时遇到的一些比较棘手的数据一致性问题和解决方案，对于刚才提到的几个维度的一致性要求均具有重要的参考价值。&lt;br&gt;1.分布式事务（基于DTC的分布式事务）&lt;br&gt;以往包括目前很多项目还是倾向于使用DTC来处理分布式事务，这个方案多数适用于一般的企业应用，业务、访问量、数据量要求都不是很高的情况下。用DTC很方便，事务的自动传播、事务的自动感知、事务的自动回滚和提交，这都是中央DTC帮我们管理好了。&lt;br&gt;由于有中央DTC的统一协调，看似好像帮我们解决了很多我们需要考虑的问题，但是它也是整个平台的致命的瓶颈，一旦DTC由于某个问题出现错误，而且这种错误都是系统层面的错误，很多问题我们是无能为力的。如果出现问题，整个应用平台都无法完成任何一个跨服务的业务流程，这其实很危险，你不无法控制系统的稳定性。&lt;br&gt;这里总结，DTC用于一般的小型企业应用，不建议用在中等规模的企业应用中，不是说这个东西不好，而是无法控制它。&lt;br&gt;2.事务补偿（提供正向或反向的操作来让数据在业务上是一致的）&lt;br&gt;世界级SOA专家所编写的书籍里都提到了使用“补偿”操作来完成数据的不一致性，当我们编写了一个服务方法A，就需要一个服务方法A1的补偿接口来完成A服务的补偿操作。但是真实的业务情况下很难实施这种看起来好像很优美很柔性的设计。没有实践就没有发言权，我们公司的技术团队就实施过这种方案，但是很不理想，这跟技术本身及技术团队没关系，只是我们的平台业务太复杂，很难去“补偿”一个已经做过的操作。&lt;br&gt;这当然也要看你所面对的项目情况，量变引起质变，如果你的各种量都上去了，这个“补偿”方案不实际，而且很难在数据层面进行“补偿“。总之，这不是一个中长期的方案。&lt;br&gt;3.异步EDA（基于异步事件流来实现柔性的分布式事务）&lt;br&gt;EDA简称”事件驱动架构“。多个系统之间通过传播”事件“来驱动整个业务的运转。系统之间没有紧耦合的同步调用的操作，都是通过发出异步的“事件”来通知下一个业务环节。&lt;br&gt;可能你会有一个疑问，异步操作，是不是系统之间延迟会很长，其实不是，现在有很多成熟的消息中间件在内网内几乎是毫秒级别的延迟，至于跨机房就看物理上的距离了。&lt;br&gt;异步操作有很多好处，这里我就不浪费大家时间重复那些好处。使用EDA实现系统之间的一个松散的事务关系，要把控好项目的质量，对系统的非功能需求、BUG数等等可能会影响业务操作中断的地方都要建立起适当的机制，让这些问题尽早的在线下解决。比如可以实施UnitTest、持续集成等一些敏捷的方法论。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里是转的一段摘录：&lt;/p&gt;
&lt;p&gt;传统分布式系统与当代的面向SOA的分布式系统有一定区别，论概念上来讲SOA是以服务为中心，既然以服务为中心就会有很多面向服务的设计原则。而传统的分布式系统没有服务的概念，也没有所谓的一切皆是服务的原则。而当代SOA则首要原则就要以服务为中
    
    </summary>
    
    
      <category term="SOA" scheme="http://yoursite.com/tags/SOA/"/>
    
      <category term="分布式事务" scheme="http://yoursite.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="柔性事务" scheme="http://yoursite.com/tags/%E6%9F%94%E6%80%A7%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="消息事务" scheme="http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>What&#39;s the simplest way to print a Java array?</title>
    <link href="http://yoursite.com/2016/08/08/What-s-the-simplest-way-to-print-a-Java-array/"/>
    <id>http://yoursite.com/2016/08/08/What-s-the-simplest-way-to-print-a-Java-array/</id>
    <published>2016-08-08T10:24:43.000Z</published>
    <updated>2016-08-08T11:33:26.582Z</updated>
    
    <content type="html">&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple Array:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String[] array = new String[] &amp;#123;&amp;quot;John&amp;quot;, &amp;quot;Mary&amp;quot;, &amp;quot;Bob&amp;quot;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(array));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[John, Mary, Bob]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nested Array:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String[][] deepArray = new String[][] &amp;#123;&amp;#123;&amp;quot;John&amp;quot;, &amp;quot;Mary&amp;quot;&amp;#125;, &amp;#123;&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(deepArray));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//output: [[Ljava.lang.String;@106d69c, [Ljava.lang.String;@52e922]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.deepToString(deepArray));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[John, Mary], [Alice, Bob]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;double Array:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;double[] doubleArray = &amp;#123; 7.0, 9.0, 5.0, 1.0, 3.0 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(doubleArray));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[7.0, 9.0, 5.0, 1.0, 3.0 ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int Array:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int[] intArray = &amp;#123; 7, 9, 5, 1, 3 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(intArray));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[7, 9, 5, 1, 3 ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple Array:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="j2se" scheme="http://yoursite.com/tags/j2se/"/>
    
      <category term="array" scheme="http://yoursite.com/tags/array/"/>
    
      <category term="print" scheme="http://yoursite.com/tags/print/"/>
    
  </entry>
  
  <entry>
    <title>Java 中int和Integer的区别</title>
    <link href="http://yoursite.com/2016/08/04/Java-%E4%B8%ADint%E5%92%8CInteger%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2016/08/04/Java-中int和Integer的区别/</id>
    <published>2016-08-04T03:41:57.000Z</published>
    <updated>2016-08-08T11:33:26.578Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Java中int和Integer的区别&quot;&gt;&lt;a href=&quot;#Java中int和Integer的区别&quot; class=&quot;headerlink&quot; title=&quot;Java中int和Integer的区别&quot;&gt;&lt;/a&gt;Java中int和Integer的区别&lt;/h1&gt;&lt;h2 id=&quot;Java各种数据类型详细介绍及其区别&quot;&gt;&lt;a href=&quot;#Java各种数据类型详细介绍及其区别&quot; class=&quot;headerlink&quot; title=&quot;Java各种数据类型详细介绍及其区别&quot;&gt;&lt;/a&gt;Java各种数据类型详细介绍及其区别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基本类型，或者叫做内置类型，是JAVA中不同于类的特殊类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java中的简单类型从概念上分为四种：实数、整数、字符、布尔值。但是有一点需要说明的是，Java里面只有八种原始类型，其列表如下：&lt;/p&gt;
&lt;p&gt;实数：double、float&lt;/p&gt;
&lt;p&gt;整数：byte、short、int、long&lt;/p&gt;
&lt;p&gt;字符：char&lt;/p&gt;
&lt;p&gt;布尔值：boolean&lt;/p&gt;
&lt;p&gt;复杂类型和基本类型的内存模型本质上是不一样的，简单数据类型的存储原理是这样的：所有的简单数据类型不存在“引用”的概念，简单数据类型都是直接存储在内存中的内存栈上的，数据本身的值就是存储在栈空间里面，而Java语言里面只有这八种数据类型是这种存储模型；而其他的只要是继承于Object类的复杂数据类型都是按照Java里面存储对象的内存模型来进行数据存储的，使用Java内存堆和内存栈来进行这种类型的数据存储，简单地讲，“引用”是存储在有序的内存栈上的，而对象本身的值存储在内存堆上的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java的简单数据讲解列表如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;int：int为整数类型，在存储的时候，用4个字节存储，范围为-2,147,483,648到2,147,483,647，在变量初始化的时候，int类型的默认值为0。&lt;/p&gt;
&lt;p&gt;short：short也属于整数类型，在存储的时候，用2个字节存储，范围为-32,768到32,767，在变量初始化的时候，short类型的默认值为0，一般情况下，因为Java本身转型的原因，可以直接写为0。&lt;/p&gt;
&lt;p&gt;long：long也属于整数类型，在存储的时候，用8个字节存储，范围为-9,223,372,036,854,775,808到9,223,372,036, 854,775,807，在变量初始化的时候，long类型的默认值为0L或0l，也可直接写为0。&lt;/p&gt;
&lt;p&gt;byte：byte同样属于整数类型，在存储的时候，用1个字节来存储，范围为-128到127，在变量初始化的时候，byte类型的默认值也为0。&lt;/p&gt;
&lt;p&gt;float：float属于实数类型，在存储的时候，用4个字节来存储，范围为32位IEEEE 754单精度范围，在变量初始化的时候，float的默认值为0.0f或0.0F，在初始化的时候可以写0.0。&lt;/p&gt;
&lt;p&gt;double：double同样属于实数类型，在存储的时候，用8个字节来存储，范围为64位IEEE 754双精度范围，在变量初始化的时候，double的默认值为0.0。&lt;/p&gt;
&lt;p&gt;char：char属于字符类型，在存储的时候用2个字节来存储，因为Java本身的字符集不是用ASCII码来进行存储，是使用的16位Unicode字符集，它的字符范围即是Unicode的字符范围，在变量初始化的时候，char类型的默认值为’u0000’。&lt;/p&gt;
&lt;p&gt;boolean：boolean属于布尔类型，在存储的时候不使用字节，仅仅使用1位来存储，范围仅仅为0和1，其字面量为true和false，而boolean变量在初始化的时候变量的默认值为false。&lt;/p&gt;
&lt;p&gt;Integer是int的封装类，里面有很多进行处理的静态方法&lt;/p&gt;
&lt;p&gt;Integer是对象而int不是，内存的分配位置也不一样&lt;/p&gt;
&lt;p&gt;Integer的属性和其他类一样的！在方法里都是引用传递，而原始类型是值传递！&lt;/p&gt;
&lt;p&gt;jdk1.5以后可以从int自动装箱Integer类。&lt;/p&gt;
&lt;p&gt;int是为了兼容以前的编程语言使用的基本类型，目的是让程序效率更高，以为它是直接分配到栈上的。所以它不是对象，不能有类似 int.operation()的操作。&lt;/p&gt;
&lt;p&gt;Integer是java中一切都是对象这个大前提下的int的包装类型，可以使用方法，是个对象，是用new分配到堆上的。&lt;/p&gt;
&lt;p&gt;jdk1.5后，引入了类似c#中的自动装、拆箱，使得Integer i = 1；这样的表达直接可行。&lt;/p&gt;
&lt;p&gt;int是一种基本数据类型，而Integer是相应于int的类类型，称为对象包装。&lt;/p&gt;
&lt;p&gt;实现这种对象包装的目的主要是因为类能够提供必要的方法，用于实现基本数据类型的数值与可打印字符串之间的转换，以及一些其他的实用程序方法；&lt;/p&gt;
&lt;p&gt;另外，有些数据结构库类只能操作对象，而不支持基本数据类型的变量，包装类提供一种便利的方式，能够把基本数据类型转换成等价的对象，从而可以利用数据结构库类进行处理。&lt;/p&gt;
&lt;p&gt;int 是基本类型，(int)(Math.Random()*100)就是一个数，可以进行加见乘除。 Integer是class ,那么 new Integer(temp)就是一个对象了，可以用到Integer这个class的方法，例如用intvalue()可以返回这个int的值。int a=1;这是基本数据类型是能参与运算的.而Integer b= new Integer(1);c=b.floatvalue;Float a= new Float(null);是可以的用Float初始化一个对象这个a有很多方法而float a;就没有因为原始没有引用类，java 提供两种不同的类型：引用类型（或者封装类型，Warpper）和原始类型（或内置类型，Primitive）。Int是java的原始数据类型，Integer是java为int提供的封装类。Java为每个原始类型提供了封装类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始类型 封装类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;boolean Boolean&lt;/p&gt;
&lt;p&gt;char Character&lt;/p&gt;
&lt;p&gt;byte Byte&lt;/p&gt;
&lt;p&gt;short Short&lt;/p&gt;
&lt;p&gt;int Integer&lt;/p&gt;
&lt;p&gt;long Long&lt;/p&gt;
&lt;p&gt;float Float&lt;/p&gt;
&lt;p&gt;double Double&lt;/p&gt;
&lt;p&gt;引用类型和原始类型的行为完全不同，并且它们具有不同的语义。引用类型和原始类型具有不同的特征和用法，它们包括：大小和速度问题，这种类型以哪种类型的数据结构存储，当引用类型和原始类型用作某个类的实例数据时所指定的缺省值。对象引用实例变量的缺省值为 null，而原始类型实例变量的缺省值与它们的类型有关。&lt;/p&gt;
&lt;h2 id=&quot;1-、Boolean-VS-boolean&quot;&gt;&lt;a href=&quot;#1-、Boolean-VS-boolean&quot; class=&quot;headerlink&quot; title=&quot;1 、Boolean VS boolean&quot;&gt;&lt;/a&gt;1 、Boolean VS boolean&lt;/h2&gt;&lt;p&gt;public final class Boolean extends Object  implementsSerializable,Comparable&lt;/p&gt;
&lt;p&gt;Boolean 类将基本类型为boolean的值包装在一个对象中。一个Boolean类型的对象只包含一个类型为boolean的字段。此外，此类还为boolean和String的相互转换提供了许多方法，并提供了处理 boolean时非常有用的其他一些常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;2、-Byte-VS-byte&quot;&gt;&lt;a href=&quot;#2、-Byte-VS-byte&quot; class=&quot;headerlink&quot; title=&quot;2、 Byte VS byte&quot;&gt;&lt;/a&gt;2、 Byte VS byte&lt;/h2&gt;&lt;p&gt;public final class Byte extends Number implements Comparable Byte类将基本类型 byte的值包装在一个对象中。一个Byte类型的对象只包含一个类型为 byte的字段。此外，该类还为 byte和 String的相互转换提供了几种方法，并提供了处理 byte时非常有用的其他一些常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;3、-Character-VS-char&quot;&gt;&lt;a href=&quot;#3、-Character-VS-char&quot; class=&quot;headerlink&quot; title=&quot;3、 Character VS char&quot;&gt;&lt;/a&gt;3、 Character VS char&lt;/h2&gt;&lt;p&gt;public final class Character extends Object  implements Serializable, Comparable&lt;/p&gt;
&lt;p&gt;Character类在对象中包装一个基本类型char的值。&lt;/p&gt;
&lt;p&gt;Character类型的对象包含类型为char的单个字段。此外，该类提供了几种方法，以确定字符的类别（小写字母，数字，等等），并将字符从大写转换成小写，反之亦然。&lt;/p&gt;
&lt;h2 id=&quot;4-、Double-VS-double&quot;&gt;&lt;a href=&quot;#4-、Double-VS-double&quot; class=&quot;headerlink&quot; title=&quot;4 、Double VS double&quot;&gt;&lt;/a&gt;4 、Double VS double&lt;/h2&gt;&lt;p&gt;public final class Double extends Number implements Comparable Double类在对象中包装了一个基本类型double的值。每个Double类型的对象都包含一个double类型的字段。此外，该类还提供了多个方法，可以将double转换为String，将String转换为double，还提供了其他一些处理double时有用的常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;5、-Float-VS-float&quot;&gt;&lt;a href=&quot;#5、-Float-VS-float&quot; class=&quot;headerlink&quot; title=&quot;5、 Float VS float&quot;&gt;&lt;/a&gt;5、 Float VS float&lt;/h2&gt;&lt;p&gt;public final class Float extends Number implements Comparable&lt;/p&gt;
&lt;p&gt;Float类在对象中包装了一个float基本类型的值。Float类型的对象包含一个float类型的字段。此外，此类提供了几种方法，可在float类型和String类型之间互相转换，并且还提供了处理float类型时非常有用的其他一些常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;6、-Integer-VS-int&quot;&gt;&lt;a href=&quot;#6、-Integer-VS-int&quot; class=&quot;headerlink&quot; title=&quot;6、 Integer VS int&quot;&gt;&lt;/a&gt;6、 Integer VS int&lt;/h2&gt;&lt;p&gt;public final class Integer extends Number implements Comparable&lt;/p&gt;
&lt;p&gt;Integer类在对象中包装了一个基本类型int的值。Integer类型的对象包含一个int类型的字段。&lt;/p&gt;
&lt;p&gt;此外，该类提供了多个方法，能在int类型和String类型之间互相转换，还提供了处理int类型时非常有用的其他一些常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;7-Long-VS-long&quot;&gt;&lt;a href=&quot;#7-Long-VS-long&quot; class=&quot;headerlink&quot; title=&quot;7 Long VS long&quot;&gt;&lt;/a&gt;7 Long VS long&lt;/h2&gt;&lt;p&gt;public final class Long extends Number implements Comparable&lt;/p&gt;
&lt;p&gt;Long类在对象中封装了基本类型long的值。每个Long类型的对象都包含一个long类型的字段。&lt;/p&gt;
&lt;p&gt;此外，该类提供了多个方法，可以将long转换为String，将String转换为long，除此之外，还提供了其他一些处理long时有用的常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;8、-Short-VS-short&quot;&gt;&lt;a href=&quot;#8、-Short-VS-short&quot; class=&quot;headerlink&quot; title=&quot;8、 Short VS short&quot;&gt;&lt;/a&gt;8、 Short VS short&lt;/h2&gt;&lt;p&gt;public final class Short extends Number implements Comparable&lt;/p&gt;
&lt;p&gt;Short类在对象中包装基本类型short的值。一个Short类型的对象只包含一个short类型的字段。另外，该类提供了多个方法，可以将short转换为String，将String转换为short，同时还提供了其他一些处理short时有用的常量和方法。&lt;/p&gt;
&lt;h2 id=&quot;9、public-final-class-Voidextends-Object&quot;&gt;&lt;a href=&quot;#9、public-final-class-Voidextends-Object&quot; class=&quot;headerlink&quot; title=&quot;9、public final class Voidextends Object&quot;&gt;&lt;/a&gt;9、public final class Voidextends Object&lt;/h2&gt;&lt;p&gt;Void 类是一个不可实例化的占位符类，它保持一个对代表 Java 关键字 void 的 Class 对象的引用。&lt;/p&gt;
&lt;p&gt;类的对象才能为null，不能把null赋值给一个变量不能，如int m=null;但可以String s=null;因为String是个类。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java中int和Integer的区别&quot;&gt;&lt;a href=&quot;#Java中int和Integer的区别&quot; class=&quot;headerlink&quot; title=&quot;Java中int和Integer的区别&quot;&gt;&lt;/a&gt;Java中int和Integer的区别&lt;/h1&gt;&lt;h2 i
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="int" scheme="http://yoursite.com/tags/int/"/>
    
      <category term="Integer" scheme="http://yoursite.com/tags/Integer/"/>
    
      <category term="j2se" scheme="http://yoursite.com/tags/j2se/"/>
    
  </entry>
  
  <entry>
    <title>[dev][collect][2016-07]collect-of-dev</title>
    <link href="http://yoursite.com/2016/08/03/dev-collect-2016-07-collect-of-dev/"/>
    <id>http://yoursite.com/2016/08/03/dev-collect-2016-07-collect-of-dev/</id>
    <published>2016-08-03T05:21:52.000Z</published>
    <updated>2016-08-03T14:42:36.539Z</updated>
    
    <content type="html">&lt;h2 id=&quot;2016-07&quot;&gt;&lt;a href=&quot;#2016-07&quot; class=&quot;headerlink&quot; title=&quot;2016-07&quot;&gt;&lt;/a&gt;2016-07&lt;/h2&gt;&lt;h3 id=&quot;2016-07-29&quot;&gt;&lt;a href=&quot;#2016-07-29&quot; class=&quot;headerlink&quot; title=&quot;2016-07-29&quot;&gt;&lt;/a&gt;2016-07-29&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;搭建ElasticSearch-2.x Logstash-2.x Kibana-4.5.x Kafka为消息中心的ELK日志平台&lt;br&gt;&lt;a href=&quot;https://www.iamle.com/archives/2058.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.iamle.com/archives/2058.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-23&quot;&gt;&lt;a href=&quot;#2016-07-23&quot; class=&quot;headerlink&quot; title=&quot;2016-07-23&quot;&gt;&lt;/a&gt;2016-07-23&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;discover meteor&lt;br&gt;&lt;a href=&quot;http://zh.discovermeteor.com/chapters/introduction/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zh.discovermeteor.com/chapters/introduction/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;webpack gitbook&lt;br&gt;&lt;a href=&quot;https://hulufei.gitbooks.io/react-tutorial/content/webpack.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hulufei.gitbooks.io/react-tutorial/content/webpack.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-22&quot;&gt;&lt;a href=&quot;#2016-07-22&quot; class=&quot;headerlink&quot; title=&quot;2016-07-22&quot;&gt;&lt;/a&gt;2016-07-22&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Spring Boot应用的测试——Mockito&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/972cd6b93206&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/972cd6b93206&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用Mockito模拟DB&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/c1c495f231ea&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/c1c495f231ea&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Spring Boot项目中使用Spock框架&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/f1e354d382cd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/f1e354d382cd&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring Boot Testing&lt;br&gt;&lt;a href=&quot;http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integration Testing a Spring Boot Application&lt;br&gt;&lt;a href=&quot;https://www.jayway.com/2014/07/04/integration-testing-a-spring-boot-application/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.jayway.com/2014/07/04/integration-testing-a-spring-boot-application/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-21&quot;&gt;&lt;a href=&quot;#2016-07-21&quot; class=&quot;headerlink&quot; title=&quot;2016-07-21&quot;&gt;&lt;/a&gt;2016-07-21&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Growth: 全栈增长工程师指南&lt;br&gt;&lt;a href=&quot;http://growth.phodal.com/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://growth.phodal.com/#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-19&quot;&gt;&lt;a href=&quot;#2016-07-19&quot; class=&quot;headerlink&quot; title=&quot;2016-07-19&quot;&gt;&lt;/a&gt;2016-07-19&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;微服务架构的分布式事务解决方案&lt;br&gt;&lt;a href=&quot;http://www.roncoo.com/details?cid=7ae3d7eddc4742f78b0548aa8bd9ccdb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.roncoo.com/details?cid=7ae3d7eddc4742f78b0548aa8bd9ccdb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-16&quot;&gt;&lt;a href=&quot;#2016-07-16&quot; class=&quot;headerlink&quot; title=&quot;2016-07-16&quot;&gt;&lt;/a&gt;2016-07-16&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 Vaadin 实现全堆栈 Java Web 开发&lt;br&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-full-stack-java-web-dev-vaadin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ibm.com/developerworks/cn/java/j-full-stack-java-web-dev-vaadin/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Creating CRUD UI with Vaadin&lt;br&gt;&lt;a href=&quot;https://spring.io/guides/gs/crud-with-vaadin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://spring.io/guides/gs/crud-with-vaadin/&lt;/a&gt;&lt;br&gt;git clone &lt;a href=&quot;https://github.com/spring-guides/gs-crud-with-vaadin.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/spring-guides/gs-crud-with-vaadin.git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当当网开源Dubbox，扩展Dubbo服务框架支持REST风格远程调用&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2014/10/dubbox-open-source&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/news/2014/10/dubbox-open-source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Dubbo中开发REST风格的远程调用（RESTful Remoting）&lt;br&gt;&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/rest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dangdangdotcom.github.io/dubbox/rest.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用JavaConfig方式配置dubbox&lt;br&gt;&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/java-config.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dangdangdotcom.github.io/dubbox/java-config.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservices with Spring&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2015/07/14/microservices-with-spring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://spring.io/blog/2015/07/14/microservices-with-spring&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-14&quot;&gt;&lt;a href=&quot;#2016-07-14&quot; class=&quot;headerlink&quot; title=&quot;2016-07-14&quot;&gt;&lt;/a&gt;2016-07-14&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Import/Read excel file 2003 or 2007 with Spring MVC&lt;br&gt;&lt;a href=&quot;http://lvtutorial.com/spring-mvc/read-excel-file-2003-or-2007-with-spring-mvc.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lvtutorial.com/spring-mvc/read-excel-file-2003-or-2007-with-spring-mvc.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SPRING BOOT FILE UPLOAD WITH AJAX&lt;br&gt;&lt;a href=&quot;http://blog.netgloo.com/2015/02/08/spring-boot-file-upload-with-ajax/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.netgloo.com/2015/02/08/spring-boot-file-upload-with-ajax/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/netgloo/spring-boot-samples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/netgloo/spring-boot-samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-13&quot;&gt;&lt;a href=&quot;#2016-07-13&quot; class=&quot;headerlink&quot; title=&quot;2016-07-13&quot;&gt;&lt;/a&gt;2016-07-13&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cSphere Docker 实训课程&lt;br&gt;&lt;a href=&quot;http://git.oschina.net/dockerf/docker-training&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git.oschina.net/dockerf/docker-training&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring Cloud方面的博客&lt;br&gt;&lt;a href=&quot;http://blog.didispace.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.didispace.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;白话 IT 之浅谈 ELK 日志系统&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4ODgwNjk1MQ==&amp;amp;mid=2653788351&amp;amp;idx=1&amp;amp;sn=a38a0b95b63186b789423195fa09f91d&amp;amp;scene=0&amp;amp;key=77421cf58af4a653195d70dcdaaed6e78c06fe4711f95c19349f5ca630c1e7f8481f6f21ba392beedcc329dbcc331cc8&amp;amp;ascene=0&amp;amp;uin=MTM4NTI5NTI4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.9.5+build(13F1808)&amp;amp;version=11020201&amp;amp;pass_ticket=MxW0cGHvKj7WTMRpzBpE%2FND%2BPkUf91pVVetULpXmjhLbsP9btRTYFt3DF6QSZ5Ct&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mp.weixin.qq.com/s?__biz=MzA4ODgwNjk1MQ==&amp;amp;mid=2653788351&amp;amp;idx=1&amp;amp;sn=a38a0b95b63186b789423195fa09f91d&amp;amp;scene=0&amp;amp;key=77421cf58af4a653195d70dcdaaed6e78c06fe4711f95c19349f5ca630c1e7f8481f6f21ba392beedcc329dbcc331cc8&amp;amp;ascene=0&amp;amp;uin=MTM4NTI5NTI4Mg%3D%3D&amp;amp;devicetype=iMac+MacBookAir6%2C2+OSX+OSX+10.9.5+build(13F1808)&amp;amp;version=11020201&amp;amp;pass_ticket=MxW0cGHvKj7WTMRpzBpE%2FND%2BPkUf91pVVetULpXmjhLbsP9btRTYFt3DF6QSZ5Ct&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户行为分析项目&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/piwik&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/piwik&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-12&quot;&gt;&lt;a href=&quot;#2016-07-12&quot; class=&quot;headerlink&quot; title=&quot;2016-07-12&quot;&gt;&lt;/a&gt;2016-07-12&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用API网关构建微服务&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/construct-micro-service-using-api-gateway&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/articles/construct-micro-service-using-api-gateway&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用Spring Cloud和Docker构建微服务&lt;br&gt;&lt;a href=&quot;http://www.dockone.io/article/510&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.dockone.io/article/510&lt;/a&gt;&lt;br&gt;原文链接：&lt;br&gt;&lt;a href=&quot;http://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html?mkt_tok=3RkMMJWWfF9wsRonuqTMZKXonjHpfsX57ukoWaC0lMI%2F0ER3fOvrPUfGjI4ATcdqI%2BSLDwEYGJlv6SgFQ7LMMaZq1rgMXBk%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html?mkt_tok=3RkMMJWWfF9wsRonuqTMZKXonjHpfsX57ukoWaC0lMI%2F0ER3fOvrPUfGjI4ATcdqI%2BSLDwEYGJlv6SgFQ7LMMaZq1rgMXBk%3D&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The API Gateway Pattern: Angular JS and Spring Security Part IV&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2015/01/28/the-api-gateway-pattern-angular-js-and-spring-security-part-iv&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://spring.io/blog/2015/01/28/the-api-gateway-pattern-angular-js-and-spring-security-part-iv&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git demo for spring-boot-microservices&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/spring-boot-microservices&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/spring-boot-microservices&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/spring-cloud-microservice-example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/spring-cloud-microservice-example&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implementing Netflix Zuul in Spring Cloud&lt;br&gt;&lt;a href=&quot;http://kubecloud.io/apigatewaypattern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://kubecloud.io/apigatewaypattern/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://start.spring.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://start.spring.io/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-11&quot;&gt;&lt;a href=&quot;#2016-07-11&quot; class=&quot;headerlink&quot; title=&quot;2016-07-11&quot;&gt;&lt;/a&gt;2016-07-11&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 Vuex + Vue.js 构建单页应用&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000005891026&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/a/1190000005891026&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/lichenbuliren/vuex-notes-app&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lichenbuliren/vuex-notes-app&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两篇关于微服务api gateway的著名文章&lt;br&gt;&lt;a href=&quot;http://microservices.io/patterns/apigateway.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://microservices.io/patterns/apigateway.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.nginx.com/blog/building-microservices-using-an-api-gateway/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.nginx.com/blog/building-microservices-using-an-api-gateway/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-08&quot;&gt;&lt;a href=&quot;#2016-07-08&quot; class=&quot;headerlink&quot; title=&quot;2016-07-08&quot;&gt;&lt;/a&gt;2016-07-08&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用spring boot和thrift、zookeeper建立微服务&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/skyblog/p/5535418.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/skyblog/p/5535418.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jenkins+Docker搭建持续集成测试环境&lt;br&gt;&lt;a href=&quot;http://www.dockone.io/article/1464&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.dockone.io/article/1464&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;spring boot+spring cloud服务化系列博客&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/skyblog/category/774535.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/skyblog/category/774535.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-07-06&quot;&gt;&lt;a href=&quot;#2016-07-06&quot; class=&quot;headerlink&quot; title=&quot;2016-07-06&quot;&gt;&lt;/a&gt;2016-07-06&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用Jenkins搭建iOS/Android持续集成打包平台&lt;br&gt;&lt;a href=&quot;http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React-Native For Android 环境搭建及踩坑&lt;br&gt;&lt;a href=&quot;http://www.imbeta.cn/react-native-for-android-huan-jing-da-jian-ji-cai-keng.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.imbeta.cn/react-native-for-android-huan-jing-da-jian-ji-cai-keng.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native 开发培训免费书&lt;br&gt;&lt;a href=&quot;https://unbug.gitbooks.io/react-native-training/content/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://unbug.gitbooks.io/react-native-training/content/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android Studio插件整理&lt;br&gt;&lt;a href=&quot;https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ydmmocoo.github.io/2016/06/28/Android-Studio%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FastDFS + Nginx 反向代理缓存 安装与配置&lt;br&gt;&lt;a href=&quot;http://www.linux178.com/storage/fastdfs-nginx-cache.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.linux178.com/storage/fastdfs-nginx-cache.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-07&quot;&gt;&lt;a href=&quot;#2016-07&quot; class=&quot;headerlink&quot; title=&quot;2016-07&quot;&gt;&lt;/a&gt;2016-07&lt;/h2&gt;&lt;h3 id=&quot;2016-07-29&quot;&gt;&lt;a href=&quot;#2016-07-29&quot; class=&quot;head
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
      <category term="dev" scheme="http://yoursite.com/tags/dev/"/>
    
      <category term="collect" scheme="http://yoursite.com/tags/collect/"/>
    
      <category term="collect-of-dev" scheme="http://yoursite.com/tags/collect-of-dev/"/>
    
  </entry>
  
  <entry>
    <title>How to synchronize ArrayList in java with example</title>
    <link href="http://yoursite.com/2016/07/28/How-to-synchronize-ArrayList-in-java-with-example/"/>
    <id>http://yoursite.com/2016/07/28/How-to-synchronize-ArrayList-in-java-with-example/</id>
    <published>2016-07-28T05:21:15.000Z</published>
    <updated>2016-07-28T14:57:55.280Z</updated>
    
    <content type="html">&lt;h2 id=&quot;There-are-two-ways-to-synchronize-explicitly&quot;&gt;&lt;a href=&quot;#There-are-two-ways-to-synchronize-explicitly&quot; class=&quot;headerlink&quot; title=&quot;There are two ways to synchronize explicitly:&quot;&gt;&lt;/a&gt;There are two ways to synchronize explicitly:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Using Collections.synchronizedList() method&lt;/li&gt;
&lt;li&gt;Using thread-safe variant of ArrayList: CopyOnWriteArrayList&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Example-1-Collections-synchronizedList-method-for-Synchronizing-ArrayList&quot;&gt;&lt;a href=&quot;#Example-1-Collections-synchronizedList-method-for-Synchronizing-ArrayList&quot; class=&quot;headerlink&quot; title=&quot;Example 1: Collections.synchronizedList() method for Synchronizing ArrayList&quot;&gt;&lt;/a&gt;Example 1: Collections.synchronizedList() method for Synchronizing ArrayList&lt;/h2&gt;&lt;p&gt;In this example we are using Collections.synchronizedList() method. The important point to note here is that iterator should be in synchronized block in this type of synchronization as shown in the below example.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package beginnersbook.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Iterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Collections;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class Details &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public static void main(String a[])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       List&amp;lt;String&amp;gt; syncal = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Collections.synchronizedList(new ArrayList&amp;lt;String&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       //Adding elements to synchronized ArrayList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       syncal.add(&amp;quot;Pen&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       syncal.add(&amp;quot;NoteBook&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       syncal.add(&amp;quot;Ink&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.println(&amp;quot;Iterating synchronized ArrayList:&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       synchronized(syncal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Iterator&amp;lt;String&amp;gt; iterator = syncal.iterator(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       while (iterator.hasNext())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.out.println(iterator.next());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Output:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Iterating synchronized ArrayList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NoteBook&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ink&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Method-2-Using-CopyOnWriteArrayList&quot;&gt;&lt;a href=&quot;#Method-2-Using-CopyOnWriteArrayList&quot; class=&quot;headerlink&quot; title=&quot;Method 2: Using CopyOnWriteArrayList&quot;&gt;&lt;/a&gt;Method 2: Using CopyOnWriteArrayList&lt;/h2&gt;&lt;p&gt;CopyOnWriteArrayList is a thread-safe variant of ArrayList.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package beginnersbook.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.concurrent.CopyOnWriteArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Iterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class Details &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public static void main(String a[])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CopyOnWriteArrayList&amp;lt;String&amp;gt; al = new CopyOnWriteArrayList&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //Adding elements to synchronized ArrayList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    al.add(&amp;quot;Pen&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    al.add(&amp;quot;NoteBook&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    al.add(&amp;quot;Ink&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&amp;quot;Displaying synchronized ArrayList Elements:&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //Synchronized block is not required in this method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Iterator&amp;lt;String&amp;gt; iterator = al.iterator(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (iterator.hasNext())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.println(iterator.next());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Output:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Displaying synchronized ArrayList Elements:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NoteBook&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ink&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;There-are-two-ways-to-synchronize-explicitly&quot;&gt;&lt;a href=&quot;#There-are-two-ways-to-synchronize-explicitly&quot; class=&quot;headerlink&quot; title=&quot;Ther
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="synchronize" scheme="http://yoursite.com/tags/synchronize/"/>
    
      <category term="ArrayList" scheme="http://yoursite.com/tags/ArrayList/"/>
    
  </entry>
  
  <entry>
    <title>多版本部署如何使用nginx根据url参数api_version值进行路由</title>
    <link href="http://yoursite.com/2016/07/26/%E5%A4%9A%E7%89%88%E6%9C%AC%E9%83%A8%E7%BD%B2%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8nginx%E6%A0%B9%E6%8D%AEurl%E5%8F%82%E6%95%B0api-version%E5%80%BC%E8%BF%9B%E8%A1%8C%E8%B7%AF%E7%94%B1/"/>
    <id>http://yoursite.com/2016/07/26/多版本部署如何使用nginx根据url参数api-version值进行路由/</id>
    <published>2016-07-26T10:53:07.000Z</published>
    <updated>2016-07-26T14:21:26.520Z</updated>
    
    <content type="html">&lt;h2 id=&quot;目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api-version’来进行请求的路由，将对应版本的请求分发到目标版本实例当中。&quot;&gt;&lt;a href=&quot;#目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api-version’来进行请求的路由，将对应版本的请求分发到目标版本实例当中。&quot; class=&quot;headerlink&quot; title=&quot;目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api_version’来进行请求的路由，将对应版本的请求分发到目标版本实例当中。&quot;&gt;&lt;/a&gt;目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api_version’来进行请求的路由，将对应版本的请求分发到目标版本实例当中。&lt;/h2&gt;&lt;h2 id=&quot;实际测试场景：&quot;&gt;&lt;a href=&quot;#实际测试场景：&quot; class=&quot;headerlink&quot; title=&quot;实际测试场景：&quot;&gt;&lt;/a&gt;实际测试场景：&lt;/h2&gt;&lt;p&gt;tomcat部署启动了2个实例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;127.0.0.1:8080&lt;/li&gt;
&lt;li&gt;127.0.0.1:8081&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本地部署一个nginx服务器，对所有请求进行代理和路由。&lt;br&gt;部署的nginx简单配置如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;worker_processes  1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;events &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    worker_connections  1024;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    include       mime.types;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default_type  application/octet-stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendfile        on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keepalive_timeout  65;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gzip  on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen       80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location /client &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ( $arg_api_version = &amp;apos;1.0.0&amp;apos; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                proxy_pass http://localhost:8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ( $arg_api_version = &amp;apos;1.0.1&amp;apos; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                proxy_pass http://localhost:8081;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_pass http://localhost:8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             proxy_pass http://localhost:8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;预先配置好本地host，以便直接使用域名访问。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1 local.xxx.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;说明：&quot;&gt;&lt;a href=&quot;#说明：&quot; class=&quot;headerlink&quot; title=&quot;说明：&quot;&gt;&lt;/a&gt;说明：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.“listen       80;”配置nginx监听80端口，接收所有请求。&lt;/li&gt;
&lt;li&gt;2.“location /client { … }”部分将会匹配到所有以“/client”开头的请求&lt;/li&gt;
&lt;li&gt;3.“location /client { … }”部分，通过$http_api_version获取到url中字段名为’api_version’的参数值，用if判断版本值，做相应的路由。最后如果都没有匹配到，就会匹配最后一行“proxy_pass &lt;a href=&quot;http://localhost:8080;”走8080实例。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080;”走8080实例。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4.“location / { … }” 部分将会匹配其余的所有请求，路由到“&lt;a href=&quot;http://localhost:8080”。这样，除“/client”前缀开头的请求外，都会默认匹配到一个固定的实例。别的请求都不会受到多版本路由配置的影响。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080”。这样，除“/client”前缀开头的请求外，都会默认匹配到一个固定的实例。别的请求都不会受到多版本路由配置的影响。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api-version’来进行请求的路由，将对应版本的请求分发到目标版本实例当中。&quot;&gt;&lt;a href=&quot;#目标：实现多版本部署，并且使用nginx根据HTTP请求中的url参数’api-ver
    
    </summary>
    
    
      <category term="冗余部署" scheme="http://yoursite.com/tags/%E5%86%97%E4%BD%99%E9%83%A8%E7%BD%B2/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="api_version" scheme="http://yoursite.com/tags/api-version/"/>
    
      <category term="路由" scheme="http://yoursite.com/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>Transform objects with guava(使用Guava库转换对象)</title>
    <link href="http://yoursite.com/2016/07/23/Transform-objects-with-guava-%E4%BD%BF%E7%94%A8Guava%E5%BA%93%E8%BD%AC%E6%8D%A2%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2016/07/23/Transform-objects-with-guava-使用Guava库转换对象/</id>
    <published>2016-07-23T05:03:29.000Z</published>
    <updated>2016-07-23T05:07:00.563Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Transform-objects-with-guava&quot;&gt;&lt;a href=&quot;#Transform-objects-with-guava&quot; class=&quot;headerlink&quot; title=&quot;Transform objects with guava&quot;&gt;&lt;/a&gt;Transform objects with guava&lt;/h1&gt;&lt;p&gt;All the function is a specific type of class that has an apply method that can be overridden. In the example, the apply method accepts a string as a parameter and returns an integer or the length of the string. Scrolling a bit further in the documentation, the most common use of functions is transforming collections.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Function&amp;lt;String, Integer&amp;gt; lengthFunction = new Function&amp;lt;String, Integer&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public Integer apply(String string) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return string.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Convert-string-to-Enum&quot;&gt;&lt;a href=&quot;#Convert-string-to-Enum&quot; class=&quot;headerlink&quot; title=&quot;Convert string to Enum&quot;&gt;&lt;/a&gt;Convert string to Enum&lt;/h2&gt;&lt;p&gt;I have seeded some data so we can get right to the examples and you don’t have to watch me type. The first example to show is transforming a string to Enum. Enums are quite popular and you may want to transform as it might be stored as a string in a database or some value.&lt;/p&gt;
&lt;p&gt;Taking a look at the Day enum we created, it is a simple class that represents the days of the week:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Day &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SUNDAY, MONDAY, TUESDAY, WEDNESDAY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    THURSDAY, FRIDAY, SATURDAY;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;We may have a list of strings with various strings representing days, Wednesday, Sunday, Monday… What we want to do is convert the list of strings to enums. There is a function in the Enum utility class in guava valueOfFunction that allows you to pass in the enum you want to convert to. In our case, Day.Class. Since we just upgraded to Guava 16.0, the valueOfFunction has been deprecated in preference of stringConverter. The stringConverter will return a function that converts a string to an Enum. Now we have a function that can be passed to guava utilities, in this case Iterables utility class by calling the transform method which will convert each string of list to a day enum.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void transform_string_to_enum () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List&amp;lt;String&amp;gt; days = Lists.newArrayList(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;WEDNESDAY&amp;quot;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;SUNDAY&amp;quot;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;MONDAY&amp;quot;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;WEDNESDAY&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Function&amp;lt;String, Day&amp;gt; stringToDayEnum = Enums.stringConverter(Day.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Iterable&amp;lt;Day&amp;gt; daysAsEnum = Iterables.transform(days, stringToDayEnum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (Day day : daysAsEnum) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(day);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Output&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WEDNESDAY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SUNDAY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MONDAY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WEDNESDAY&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Convert-from-one-object-to-another&quot;&gt;&lt;a href=&quot;#Convert-from-one-object-to-another&quot; class=&quot;headerlink&quot; title=&quot;Convert from one object to another&quot;&gt;&lt;/a&gt;Convert from one object to another&lt;/h2&gt;&lt;p&gt;The next example will look at is how to convert one object to another. Quite often we need to go to a legacy system to get data and populate a new set of domains for our new system. Or we may get data from a web service or whatever it may be. For this example, I created two objects. ETradeInvestment and TdAmeritradeInvestment which contain similar attributes of different types.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class ETradeInvestment &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private BigDecimal price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class TdAmeritradeInvestment &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int investmentKey;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String investmentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private double investmentPrice;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;There is a number of other utilities such as BeanUtils.copyProperties in apache commons or written your own if statements and have made it work that way. If we don’t have a list of objects, we can call a method on function that will return a just a single object. We want to create the function that will map the TdAmeritradeInvestment to ETradeInvestment. If you ever get lost, you can use code assist or just remember the &lt;f, t=&quot;&quot;&gt; just means from object, to object. For each iteration of the list, a new ETradeInvestment object will be created while mapping the TdAmeritradeInvestment to it. For the key, we will use the Ints.stringConverter which allows us to convert from a string to an int.&lt;/f,&gt;&lt;/p&gt;
&lt;p&gt;If we want to get some reuse out of this function, we could extract it outside this method or we can just use it inline. We will use the Lists utility to transform the list, above we use Iterables and there is also FluentIterables and Collections2. There is a lot of different ways which guava provides to use a function. If we run this code, we have EtradeInvestment object with the key, name and price. As a disclosure, I don’t own any of these investments and were pulled from Google home page under the trending section. That did it, we converted from the TdAmeritradeInvestment to ETradeInvestment.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void convert_tdinvestment_etradeinvestment () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List&amp;lt;TdAmeritradeInvestment&amp;gt; tdInvestments = Lists.newArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(555, &amp;quot;Facebook Inc&amp;quot;, 57.51));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(123, &amp;quot;Micron Technology, Inc.&amp;quot;, 21.29));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(456, &amp;quot;Ford Motor Company&amp;quot;, 15.31));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(236, &amp;quot;Sirius XM Holdings Inc&amp;quot;, 3.60));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // convert a list of objects&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Function&amp;lt;TdAmeritradeInvestment, ETradeInvestment&amp;gt; tdToEtradeFunction = new Function&amp;lt;TdAmeritradeInvestment, ETradeInvestment&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public ETradeInvestment apply(TdAmeritradeInvestment input) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ETradeInvestment investment = new ETradeInvestment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            investment.setKey(Ints.stringConverter().reverse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .convert(input.getInvestmentKey()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            investment.setName(input.getInvestmentName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            investment.setPrice(new BigDecimal(input.getInvestmentPrice()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return investment;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List&amp;lt;ETradeInvestment&amp;gt; etradeInvestments = Lists.transform(tdInvestments, tdToEtradeFunction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(etradeInvestments);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Output&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETradeInvestment&amp;#123;key=555, name=Facebook Inc, price=57.50&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETradeInvestment&amp;#123;key=123, name=Micron Technology, Inc., price=21.28&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETradeInvestment&amp;#123;key=456, name=Ford Motor Company, price=15.31&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETradeInvestment&amp;#123;key=236, name=Sirius XM Holdings Inc, price=3.60&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Convert-an-object&quot;&gt;&lt;a href=&quot;#Convert-an-object&quot; class=&quot;headerlink&quot; title=&quot;Convert an object&quot;&gt;&lt;/a&gt;Convert an object&lt;/h2&gt;&lt;p&gt;If you have one single investment or object you want to convert, you can call the apply method directly on the function that will do the conversion.&lt;/p&gt;
&lt;p&gt;ETradeInvestment faceBookInvestment = tdToEtradeFunction&lt;br&gt;                .apply(new TdAmeritradeInvestment(555, “Facebook Inc”, 57.51));&lt;br&gt;Output&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ETradeInvestment&amp;#123;key=555, name=Facebook Inc, price=57.50&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Convert-list-to-map&quot;&gt;&lt;a href=&quot;#Convert-list-to-map&quot; class=&quot;headerlink&quot; title=&quot;Convert list to map&quot;&gt;&lt;/a&gt;Convert list to map&lt;/h2&gt;&lt;p&gt;One other really neat way to use function convert a list to a map. You may want to look up an object based on some object property. In this example, we want to create a map of TdAmeritradeInvestment based on the investment key. Taking a look we can use the Maps utility calling the uniqueIndex method which accepts a list and a function. The function, or the keyfunction, is used to produce the key for each value in the iterable. In this instance, the function will map from a TdAmeritradeInvestment and return an integer which will represent the key in the map.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void transform_list_to_map () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List&amp;lt;TdAmeritradeInvestment&amp;gt; tdInvestments = Lists.newArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(555, &amp;quot;Facebook Inc&amp;quot;, 57.51));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(123, &amp;quot;Micron Technology, Inc.&amp;quot;, 21.29));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(456, &amp;quot;Ford Motor Company&amp;quot;, 15.31));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tdInvestments.add(new TdAmeritradeInvestment(236, &amp;quot;Sirius XM Holdings Inc&amp;quot;, 3.60));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImmutableMap&amp;lt;Integer, TdAmeritradeInvestment&amp;gt; investmentMap = Maps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .uniqueIndex(tdInvestments,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    new Function&amp;lt;TdAmeritradeInvestment, Integer&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        public Integer apply(TdAmeritradeInvestment input) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            return new Integer(input.getInvestmentKey());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(investmentMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Output&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;555=TdAmeritradeInvestment&amp;#123;key=555, name=Facebook Inc, price=57.51&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123=TdAmeritradeInvestment&amp;#123;key=123, name=Micron Technology, Inc., price=21.29&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;456=TdAmeritradeInvestment&amp;#123;key=456, name=Ford Motor Company, price=15.31&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236=TdAmeritradeInvestment&amp;#123;key=236, name=Sirius XM Holdings Inc, price=3.6&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原地址：&lt;a href=&quot;http://www.leveluplunch.com/java/tutorials/002-transform-objects-with-guava/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.leveluplunch.com/java/tutorials/002-transform-objects-with-guava/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Transform-objects-with-guava&quot;&gt;&lt;a href=&quot;#Transform-objects-with-guava&quot; class=&quot;headerlink&quot; title=&quot;Transform objects with guava&quot;&gt;&lt;/a&gt;Tr
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="guava" scheme="http://yoursite.com/tags/guava/"/>
    
      <category term="transform objects" scheme="http://yoursite.com/tags/transform-objects/"/>
    
      <category term="convert" scheme="http://yoursite.com/tags/convert/"/>
    
      <category term="对象转换" scheme="http://yoursite.com/tags/%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Springboot应用中如何针对springmvc的controller写单元测试</title>
    <link href="http://yoursite.com/2016/07/23/Springboot%E5%BA%94%E7%94%A8%E4%B8%AD%E5%A6%82%E4%BD%95%E9%92%88%E5%AF%B9springmvc%E7%9A%84controller%E5%86%99%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2016/07/23/Springboot应用中如何针对springmvc的controller写单元测试/</id>
    <published>2016-07-23T04:54:56.000Z</published>
    <updated>2016-07-23T05:01:46.330Z</updated>
    
    <content type="html">&lt;h2 id=&quot;An-example-test-for-your-controller-can-be-something-as-simple-as&quot;&gt;&lt;a href=&quot;#An-example-test-for-your-controller-can-be-something-as-simple-as&quot; class=&quot;headerlink&quot; title=&quot;An example test for your controller can be something as simple as&quot;&gt;&lt;/a&gt;An example test for your controller can be something as simple as&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class DemoApplicationTests &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    final String BASE_URL = &amp;quot;http://localhost:8080/&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private MockMvc mockMvc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Before&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setup() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.mockMvc = standaloneSetup(new HelloWorld()).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void testSayHelloWorld() throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.mockMvc.perform(get(&amp;quot;/&amp;quot;).accept(MediaType.parseMediaType(&amp;quot;application/json;charset=UTF-8&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .andExpect(status().isOk())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .andExpect(content().contentType(&amp;quot;application/json&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;The-new-testing-improvements-that-debuted-in-Spring-Boot-1-4-M2-can-help-reduce-the-amount-of-code-you-need-to-write-situation-such-as-these&quot;&gt;&lt;a href=&quot;#The-new-testing-improvements-that-debuted-in-Spring-Boot-1-4-M2-can-help-reduce-the-amount-of-code-you-need-to-write-situation-such-as-these&quot; class=&quot;headerlink&quot; title=&quot;The new testing improvements that debuted in Spring Boot 1.4.M2 can help reduce the amount of code you need to write situation such as these.&quot;&gt;&lt;/a&gt;The new testing improvements that debuted in Spring Boot 1.4.M2 can help reduce the amount of code you need to write situation such as these.&lt;/h2&gt;&lt;p&gt;The test would look like so:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@RunWith(SpringRunner.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@WebMvcTest(HelloWorld.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class UserVehicleControllerTests &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Autowired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private MockMvc mvc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void testSayHelloWorld() throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.mockMvc.perform(get(&amp;quot;/&amp;quot;).accept(MediaType.parseMediaType(&amp;quot;application/json;charset=UTF-8&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .andExpect(status().isOk())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .andExpect(content().contentType(&amp;quot;application/json&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;还有一种方式是使用TestRestTemplate&quot;&gt;&lt;a href=&quot;#还有一种方式是使用TestRestTemplate&quot; class=&quot;headerlink&quot; title=&quot;还有一种方式是使用TestRestTemplate&quot;&gt;&lt;/a&gt;还有一种方式是使用TestRestTemplate&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package controller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Date;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.HashMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.junit.runner.RunWith;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.beans.factory.annotation.Value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.boot.test.SpringApplicationConfiguration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.boot.test.TestRestTemplate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.boot.test.WebIntegrationTest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.springframework.web.client.RestTemplate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ipicture.service.post.AppServicePost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ipicture.service.post.model.JsonObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import ipicture.service.post.model.Subject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@RunWith(SpringJUnit4ClassRunner.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@SpringApplicationConfiguration(classes = AppServicePost.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@WebIntegrationTest(&amp;quot;server.port:8083&amp;quot;)// 使用0表示端口号随机，也可以具体指定如8888这样的固定端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class SubjectControllerTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private RestTemplate template = new TestRestTemplate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Value(&amp;quot;$&amp;#123;server.port&amp;#125;&amp;quot;)// 注入端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int port;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String getBaseUrl() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;http://localhost:&amp;quot; + port;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void test() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Subject s = new Subject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setCreator(1l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setCreated(new Date());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setSubjectName(&amp;quot;test5&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setDescr(&amp;quot;test subject&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setDeleted(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setParent_id(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setStatus(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setType(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String url = getBaseUrl() + &amp;quot;/subject/save&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String result = template.postForObject(url, s, String.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;An-example-test-for-your-controller-can-be-something-as-simple-as&quot;&gt;&lt;a href=&quot;#An-example-test-for-your-controller-can-be-something-as
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring boot" scheme="http://yoursite.com/tags/spring-boot/"/>
    
      <category term="junit" scheme="http://yoursite.com/tags/junit/"/>
    
      <category term="测试， spring mvc" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95%EF%BC%8C-spring-mvc/"/>
    
      <category term="Springboot应用中如何针对springmvc的controller写单元测试" scheme="http://yoursite.com/tags/Springboot%E5%BA%94%E7%94%A8%E4%B8%AD%E5%A6%82%E4%BD%95%E9%92%88%E5%AF%B9springmvc%E7%9A%84controller%E5%86%99%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>关于java项目中如何读取配置文件</title>
    <link href="http://yoursite.com/2016/07/22/%E5%85%B3%E4%BA%8Ejava%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%A6%82%E4%BD%95%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/07/22/关于java项目中如何读取配置文件/</id>
    <published>2016-07-22T01:27:32.000Z</published>
    <updated>2016-07-22T14:04:43.942Z</updated>
    
    <content type="html">&lt;h1 id=&quot;关于java项目中如何读取配置文件&quot;&gt;&lt;a href=&quot;#关于java项目中如何读取配置文件&quot; class=&quot;headerlink&quot; title=&quot;关于java项目中如何读取配置文件&quot;&gt;&lt;/a&gt;关于java项目中如何读取配置文件&lt;/h1&gt;&lt;h2 id=&quot;Using-multiple-property-files-via-PropertyPlaceholderConfigurer-in-multiple-projects-modules&quot;&gt;&lt;a href=&quot;#Using-multiple-property-files-via-PropertyPlaceholderConfigurer-in-multiple-projects-modules&quot; class=&quot;headerlink&quot; title=&quot;- Using multiple property files (via PropertyPlaceholderConfigurer) in multiple projects/modules&quot;&gt;&lt;/a&gt;- Using multiple property files (via PropertyPlaceholderConfigurer) in multiple projects/modules&lt;/h2&gt;&lt;p&gt;If you ensure that every place holder, in each of the contexts involved, is ignoring unresolvable keys then both of these approaches work. For example:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;context:property-placeholder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location=&amp;quot;classpath:dao.properties,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          classpath:services.properties,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          classpath:user.properties&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ignore-unresolvable=&amp;quot;true&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;or&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&amp;quot;propertyConfigurer&amp;quot; class=&amp;quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;locations&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;value&amp;gt;classpath:dao.properties&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;value&amp;gt;classpath:services.properties&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;value&amp;gt;classpath:user.properties&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/property&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;property name=&amp;quot;ignoreUnresolvablePlaceholders&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Spring-MVC-read-file-from-src-main-resources&quot;&gt;&lt;a href=&quot;#Spring-MVC-read-file-from-src-main-resources&quot; class=&quot;headerlink&quot; title=&quot;- Spring MVC : read file from src/main/resources&quot;&gt;&lt;/a&gt;- Spring MVC : read file from src/main/resources&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Resource resource = new ClassPathResource(fileLocationInClasspath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InputStream resourceInputStream = resource.getInputStream();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;How-do-I-load-a-resource-and-use-its-contents-as-a-string-in-Spring&quot;&gt;&lt;a href=&quot;#How-do-I-load-a-resource-and-use-its-contents-as-a-string-in-Spring&quot; class=&quot;headerlink&quot; title=&quot;- How do I load a resource and use its contents as a string in Spring&quot;&gt;&lt;/a&gt;- How do I load a resource and use its contents as a string in Spring&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&amp;quot;contents&amp;quot; class=&amp;quot;org.apache.commons.io.IOUtils&amp;quot; factory-method=&amp;quot;toString&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;constructor-arg value=&amp;quot;classpath:path/to/resource.txt&amp;quot; type=&amp;quot;java.io.InputStream&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This solution requires Apache Commons IO.&lt;/p&gt;
&lt;p&gt;Another solution, suggested by @Parvez, without Apache Commons IO dependency is&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&amp;quot;contents&amp;quot; class=&amp;quot;java.lang.String&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;constructor-arg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;bean class=&amp;quot;org.springframework.util.FileCopyUtils&amp;quot; factory-method=&amp;quot;copyToByteArray&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;constructor-arg value=&amp;quot;classpath:path/to/resource.txt&amp;quot; type=&amp;quot;java.io.InputStream&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/bean&amp;gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/constructor-arg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于java项目中如何读取配置文件&quot;&gt;&lt;a href=&quot;#关于java项目中如何读取配置文件&quot; class=&quot;headerlink&quot; title=&quot;关于java项目中如何读取配置文件&quot;&gt;&lt;/a&gt;关于java项目中如何读取配置文件&lt;/h1&gt;&lt;h2 id=&quot;Using
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring mvc" scheme="http://yoursite.com/tags/spring-mvc/"/>
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
      <category term="读取配置文件" scheme="http://yoursite.com/tags/%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
      <category term="property file" scheme="http://yoursite.com/tags/property-file/"/>
    
  </entry>
  
  <entry>
    <title>[使用spring-boot+spring-cloud一步步搭建微服务架构]一-开始一个spring-boot应用</title>
    <link href="http://yoursite.com/2016/07/11/%E4%BD%BF%E7%94%A8spring-boot-spring-cloud%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%90%AD%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84-%E4%B8%80-%E5%BC%80%E5%A7%8B%E4%B8%80%E4%B8%AAspring-boot%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2016/07/11/使用spring-boot-spring-cloud一步步搭建微服务架构-一-开始一个spring-boot应用/</id>
    <published>2016-07-11T12:24:25.000Z</published>
    <updated>2016-07-11T13:30:20.548Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一-目标愿景&quot;&gt;&lt;a href=&quot;#一-目标愿景&quot; class=&quot;headerlink&quot; title=&quot;一. 目标愿景&quot;&gt;&lt;/a&gt;一. 目标愿景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;我们的目标是：使用spring  boot + spring cloud一步步搭建微服务架构&lt;/strong&gt;&lt;br&gt;本系列demo项目githu地址：&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/lannisi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/lannisi&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-都说服务化，以前我们是怎么搭建soa服务的？之前的架构有什么未达理想？&quot;&gt;&lt;a href=&quot;#1-都说服务化，以前我们是怎么搭建soa服务的？之前的架构有什么未达理想？&quot; class=&quot;headerlink&quot; title=&quot;1. 都说服务化，以前我们是怎么搭建soa服务的？之前的架构有什么未达理想？&quot;&gt;&lt;/a&gt;1. 都说服务化，以前我们是怎么搭建soa服务的？之前的架构有什么未达理想？&lt;/h3&gt;&lt;p&gt;之前，一个比较流行的soa服务化方案是dubbo/dubbox+zookeeper，配上spring boot。&lt;br&gt;这个方案是比较流行的方案之一，但是有几点未达理想的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1) dubbo的性能并不如一些其他服务化开发工具，比如thrift和ice。&lt;/li&gt;
&lt;li&gt;2) dubbo是一个RPC的半完善解决方案，中规中矩，配套的软件基础设施不全。问题定位、熔断和监控方面的问题让人没有那么的放心。&lt;/li&gt;
&lt;li&gt;3) 服务提供者和消费者都需要使用xml文件配置，不优雅。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-为什么使用Spring-Cloud-？&quot;&gt;&lt;a href=&quot;#2-为什么使用Spring-Cloud-？&quot; class=&quot;headerlink&quot; title=&quot;2. 为什么使用Spring Cloud ？&quot;&gt;&lt;/a&gt;2. 为什么使用Spring Cloud ？&lt;/h3&gt;&lt;p&gt;Spring Cloud 提供了一整套分布式服务开发的工具，带着一些问题，我们希望在spring could中寻找答案。&lt;br&gt;Spring Cloud有什么特点？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1) 集成了springboot与docker，用起来很方便。配置中心，服务中心，服务，客户端等等组件开启，都非常的简单，往往只需几行代码。&lt;/li&gt;
&lt;li&gt;2) 提供了一整套分布式服务开发的工具，从边缘服务的Zuul，到服务发现Eureka ，再到hystrix 熔断机制，是一套完整的生态。特别是hystrix，提供了完整的熔断机制，可以很轻易的引入现有系统。&lt;/li&gt;
&lt;li&gt;3) Spring Cloud有一个不好的地方是，实际编码会有侵入性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-为什么使用spring-boot？&quot;&gt;&lt;a href=&quot;#3-为什么使用spring-boot？&quot; class=&quot;headerlink&quot; title=&quot;3. 为什么使用spring boot？&quot;&gt;&lt;/a&gt;3. 为什么使用spring boot？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1) spring boot有pivotal和netfix背书，是一套完整的企业级应用的开发方案，天然集成分布式云架构spring-cloud。&lt;/li&gt;
&lt;li&gt;2) spring-boot的完全抛弃以往java项目配置文件过多的“陋习”，开启一个项目只需几行代码。&lt;/li&gt;
&lt;li&gt;3) Sprinboot允许项目使用内嵌的tomcat像启动普通java程序一样启动一个web项目.由于有了这个特性，项目不再需要打war包部署到tomcat，而是打成jar包，直接使用java -jar命令启动.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;二-开始第一个springboot项目&quot;&gt;&lt;a href=&quot;#二-开始第一个springboot项目&quot; class=&quot;headerlink&quot; title=&quot;二. 开始第一个springboot项目&quot;&gt;&lt;/a&gt;二. 开始第一个springboot项目&lt;/h2&gt;&lt;p&gt;在一切开始之前，我们首先要知道如何开始一个springboot项目。&lt;/p&gt;
&lt;h3 id=&quot;1-创建一个空的maven项目，pom-xml中添加maven依赖&quot;&gt;&lt;a href=&quot;#1-创建一个空的maven项目，pom-xml中添加maven依赖&quot; class=&quot;headerlink&quot; title=&quot;1. 创建一个空的maven项目，pom.xml中添加maven依赖&quot;&gt;&lt;/a&gt;1. 创建一个空的maven项目，pom.xml中添加maven依赖&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-编写项目启动入口App-java&quot;&gt;&lt;a href=&quot;#2-编写项目启动入口App-java&quot; class=&quot;headerlink&quot; title=&quot;2. 编写项目启动入口App.java&quot;&gt;&lt;/a&gt;2. 编写项目启动入口App.java&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class App &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void main(String[] args) throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpringApplication.run(App.class, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ok! done!&lt;br&gt;这样就已经能直接使用spring boot了.&lt;br&gt;启动App.java，spring boot就会使用内置的tomcat直接在本机的8080端口开启一个服务。&lt;/p&gt;
&lt;h3 id=&quot;3-再进一步，为应用引入spring-mvc&quot;&gt;&lt;a href=&quot;#3-再进一步，为应用引入spring-mvc&quot; class=&quot;headerlink&quot; title=&quot;3. 再进一步，为应用引入spring mvc&quot;&gt;&lt;/a&gt;3. 再进一步，为应用引入spring mvc&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Controller&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class SampleController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @RequestMapping(&amp;quot;/&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @ResponseBody&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String home() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String data = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;quot;Hello World!&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动App.java，访问localhost:8080, 即可遇见“Hello World!”&lt;/p&gt;
&lt;p&gt;helloword项目也可参照：&lt;a href=&quot;https://github.com/YihuaWanglv/lannisi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/lannisi&lt;/a&gt; 下的boot-sample-helloword项目。&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/lannisi/tree/master/boot-sample-helloword&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/lannisi/tree/master/boot-sample-helloword&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-目标愿景&quot;&gt;&lt;a href=&quot;#一-目标愿景&quot; class=&quot;headerlink&quot; title=&quot;一. 目标愿景&quot;&gt;&lt;/a&gt;一. 目标愿景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;我们的目标是：使用spring  boot + spring cloud一步步搭建微服务
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring boot" scheme="http://yoursite.com/tags/spring-boot/"/>
    
      <category term="spring cloud" scheme="http://yoursite.com/tags/spring-cloud/"/>
    
      <category term="微服务" scheme="http://yoursite.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="使用spring-boot+spring-cloud一步步搭建微服务架构" scheme="http://yoursite.com/tags/%E4%BD%BF%E7%94%A8spring-boot-spring-cloud%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%90%AD%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>使用RAP作为接口管理和调试的工具</title>
    <link href="http://yoursite.com/2016/07/08/%E4%BD%BF%E7%94%A8RAP%E4%BD%9C%E4%B8%BA%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%92%8C%E8%B0%83%E8%AF%95%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2016/07/08/使用RAP作为接口管理和调试的工具/</id>
    <published>2016-07-08T06:06:27.000Z</published>
    <updated>2016-07-11T12:08:57.865Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、为什么使用RAP？&quot;&gt;&lt;a href=&quot;#一、为什么使用RAP？&quot; class=&quot;headerlink&quot; title=&quot;一、为什么使用RAP？&quot;&gt;&lt;/a&gt;一、为什么使用RAP？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;接口定义和管理，传统的方式是使用word文档。但word文档管理接口文档有不少问题。&lt;br&gt;比如，word文档在相互传递的过程中，可能会导致彼此文档版本不一致；word文档难以结构化的集中维护各项目的文档，而且编写麻烦；word文档的接口定义功能单一，仅仅提供文档功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而是用RAP作为接口文档定义管理的工具，则为我们提供了以下功能：&lt;br&gt;1.可以按团队和项目结构化的管理接口文档。&lt;br&gt;2.提供统一方便的接口定义方式。&lt;br&gt;3.为前端提供mock数据，以便在后端没有开发好后端接口前，提前根据接口进行开发。&lt;br&gt;4.校验后端提供的接口的数据格式和字段是否符合要求。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;虽然RAP在自动化测试方面功能还有欠缺，仍不失为接口管理一个十分方便的工具。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;二、RAP安装部署&quot;&gt;&lt;a href=&quot;#二、RAP安装部署&quot; class=&quot;headerlink&quot; title=&quot;二、RAP安装部署&quot;&gt;&lt;/a&gt;二、RAP安装部署&lt;/h2&gt;&lt;h3 id=&quot;1-下载RAP&quot;&gt;&lt;a href=&quot;#1-下载RAP&quot; class=&quot;headerlink&quot; title=&quot;1.下载RAP&quot;&gt;&lt;/a&gt;1.下载RAP&lt;/h3&gt;&lt;p&gt;在RAP的github主页上下载最新版本war包&lt;/p&gt;
&lt;h3 id=&quot;2-环境准备&quot;&gt;&lt;a href=&quot;#2-环境准备&quot; class=&quot;headerlink&quot; title=&quot;2.环境准备&quot;&gt;&lt;/a&gt;2.环境准备&lt;/h3&gt;&lt;p&gt;需要tomcat和mysql&lt;/p&gt;
&lt;h3 id=&quot;3-部署&quot;&gt;&lt;a href=&quot;#3-部署&quot; class=&quot;headerlink&quot; title=&quot;3.部署&quot;&gt;&lt;/a&gt;3.部署&lt;/h3&gt;&lt;p&gt;RAP在tomcat中要使用ROOT的方式部署。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把下载好的war包放入tomcat的webapps目录下，然后删除tomcat中webapps目录下原先的ROOT文件夹，重命名war包为ROOT.war&lt;/li&gt;
&lt;li&gt;在mysql中建立rap_db数据库，导入RAPgithub代码中提供的sql脚本初始化数据库&lt;/li&gt;
&lt;li&gt;启动tomcat&lt;/li&gt;
&lt;li&gt;访问&lt;a href=&quot;http://localhost:8080/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;三、RAP的使用&quot;&gt;&lt;a href=&quot;#三、RAP的使用&quot; class=&quot;headerlink&quot; title=&quot;三、RAP的使用&quot;&gt;&lt;/a&gt;三、RAP的使用&lt;/h2&gt;&lt;h3 id=&quot;1-注册账号&quot;&gt;&lt;a href=&quot;#1-注册账号&quot; class=&quot;headerlink&quot; title=&quot;1.注册账号&quot;&gt;&lt;/a&gt;1.注册账号&lt;/h3&gt;&lt;p&gt;RAP自带账号管理和登陆功能，使用前先注册账号，登陆即可&lt;/p&gt;
&lt;h3 id=&quot;2-添加团队、项目产品线等。&quot;&gt;&lt;a href=&quot;#2-添加团队、项目产品线等。&quot; class=&quot;headerlink&quot; title=&quot;2.添加团队、项目产品线等。&quot;&gt;&lt;/a&gt;2.添加团队、项目产品线等。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建团队&lt;br&gt;&lt;img src=&quot;/images/rap-001.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;创建产品线&lt;br&gt;&lt;img src=&quot;/images/rap-002.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/rap-003.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-分组和项目管理&quot;&gt;&lt;a href=&quot;#3-分组和项目管理&quot; class=&quot;headerlink&quot; title=&quot;3.分组和项目管理&quot;&gt;&lt;/a&gt;3.分组和项目管理&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rap-004.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/rap-009.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-添加模块和页面&quot;&gt;&lt;a href=&quot;#4-添加模块和页面&quot; class=&quot;headerlink&quot; title=&quot;4.添加模块和页面&quot;&gt;&lt;/a&gt;4.添加模块和页面&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rap-005.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-添加接口&quot;&gt;&lt;a href=&quot;#5-添加接口&quot; class=&quot;headerlink&quot; title=&quot;5.添加接口&quot;&gt;&lt;/a&gt;5.添加接口&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rap-006.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;6-为返回值字段设置自定义的mock数据&quot;&gt;&lt;a href=&quot;#6-为返回值字段设置自定义的mock数据&quot; class=&quot;headerlink&quot; title=&quot;6.为返回值字段设置自定义的mock数据&quot;&gt;&lt;/a&gt;6.为返回值字段设置自定义的mock数据&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rap-007.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我们可以为不同的字段自定义不同的mock数据，已适应实际需要。&lt;/p&gt;
&lt;h3 id=&quot;7-前端使用接口mock数据提前进行开发&quot;&gt;&lt;a href=&quot;#7-前端使用接口mock数据提前进行开发&quot; class=&quot;headerlink&quot; title=&quot;7.前端使用接口mock数据提前进行开发&quot;&gt;&lt;/a&gt;7.前端使用接口mock数据提前进行开发&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/rap-008.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;这个例子中的“项目根路径”：localhost:8080/mockjs/1&lt;br&gt;就是这个mock服务的模拟服务路径&lt;br&gt;前端访问：&lt;a href=&quot;http://localhost:8080/mockjs/1/client/machine/activate?drive_id=sfd&amp;amp;activate_code=sdf&amp;amp;mac_address=sdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/mockjs/1/client/machine/activate?drive_id=sfd&amp;amp;activate_code=sdf&amp;amp;mac_address=sdf&lt;/a&gt;&lt;br&gt;就是访问我们模拟的接口地址: /client/machine/activate&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、为什么使用RAP？&quot;&gt;&lt;a href=&quot;#一、为什么使用RAP？&quot; class=&quot;headerlink&quot; title=&quot;一、为什么使用RAP？&quot;&gt;&lt;/a&gt;一、为什么使用RAP？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;接口定义和管理，传统的方式是使用word文档。但w
    
    </summary>
    
    
      <category term="接口文档" scheme="http://yoursite.com/tags/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
    
      <category term="RAP" scheme="http://yoursite.com/tags/RAP/"/>
    
      <category term="mock" scheme="http://yoursite.com/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>[dev][collect][2016-06]collect-of-dev</title>
    <link href="http://yoursite.com/2016/07/07/dev-collect-2016-06-collect-of-dev/"/>
    <id>http://yoursite.com/2016/07/07/dev-collect-2016-06-collect-of-dev/</id>
    <published>2016-07-07T03:08:24.000Z</published>
    <updated>2016-07-11T12:15:21.828Z</updated>
    
    <content type="html">&lt;h2 id=&quot;2016-06&quot;&gt;&lt;a href=&quot;#2016-06&quot; class=&quot;headerlink&quot; title=&quot;2016-06&quot;&gt;&lt;/a&gt;2016-06&lt;/h2&gt;&lt;h3 id=&quot;2016-06-24&quot;&gt;&lt;a href=&quot;#2016-06-24&quot; class=&quot;headerlink&quot; title=&quot;2016-06-24&quot;&gt;&lt;/a&gt;2016-06-24&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【直播全文记录】 从零开始搭建高可用IM系统&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;amp;mid=206924771&amp;amp;idx=1&amp;amp;sn=4705b832c410765a3c89acfa1300b0b6&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;amp;mid=206924771&amp;amp;idx=1&amp;amp;sn=4705b832c410765a3c89acfa1300b0b6&amp;amp;scene=21#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何设计类似微信的多终端数据同步协议 | Grouk实践分享&lt;br&gt;&lt;a href=&quot;http://chuansong.me/n/1718596&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chuansong.me/n/1718596&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-06-22&quot;&gt;&lt;a href=&quot;#2016-06-22&quot; class=&quot;headerlink&quot; title=&quot;2016-06-22&quot;&gt;&lt;/a&gt;2016-06-22&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基于Dubbo框架构建分布式服务&lt;br&gt;&lt;a href=&quot;http://shiyanjun.cn/archives/1075.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://shiyanjun.cn/archives/1075.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;高并发性能调试经验分享&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21348220&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/21348220&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java进阶（三）多线程开发关键技术&lt;br&gt;&lt;a href=&quot;http://www.jasongj.com/java/multi_thread/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jasongj.com/java/multi_thread/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;blog kafka&lt;br&gt;&lt;a href=&quot;http://www.jasongj.com/tags/Kafka/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jasongj.com/tags/Kafka/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何构建Android MVVM应用程序&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/2fc41a310f79&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/2fc41a310f79&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;超详细React Native实现微信好友/朋友圈分享功能-Android/iOS双平台通用&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E8%B6%85%E8%AF%A6%E7%BB%86react-native%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E6%9C%8B%E5%8F%8B%E5%9C%88%E5%88%86%E4%BA%AB%E5%8A%9F%E8%83%BD-androidios%E5%8F%8C%E5%B9%B3%E5%8F%B0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lcode.org/%E8%B6%85%E8%AF%A6%E7%BB%86react-native%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E6%9C%8B%E5%8F%8B%E5%9C%88%E5%88%86%E4%BA%AB%E5%8A%9F%E8%83%BD-androidios%E5%8F%8C%E5%B9%B3%E5%8F%B0/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHELL编程之常用技巧&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNDMyODgyMA==&amp;amp;mid=2247483698&amp;amp;idx=1&amp;amp;sn=3b52493d202362aae0bf511002e63d52&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzIxNDMyODgyMA==&amp;amp;mid=2247483698&amp;amp;idx=1&amp;amp;sn=3b52493d202362aae0bf511002e63d52&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让你爱上写作的 11 款 Markdown 工具&lt;br&gt;&lt;a href=&quot;http://www.ifanr.com/app/665209&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ifanr.com/app/665209&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于Docker搭建Hadoop集群之升级版&lt;br&gt;&lt;a href=&quot;http://kiwenlau.com/2016/06/12/160612-hadoop-cluster-docker-update/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://kiwenlau.com/2016/06/12/160612-hadoop-cluster-docker-update/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kafka设计解析（一）- Kafka背景及架构介绍&lt;br&gt;&lt;a href=&quot;http://www.jasongj.com/2015/03/10/KafkaColumn1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jasongj.com/2015/03/10/KafkaColumn1/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-06-15&quot;&gt;&lt;a href=&quot;#2016-06-15&quot; class=&quot;headerlink&quot; title=&quot;2016-06-15&quot;&gt;&lt;/a&gt;2016-06-15&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;淘拍拍前端架构2.0-简介&lt;br&gt;&lt;a href=&quot;http://www.w3cfuns.com/notes/25101/33114eae47bbda0c50fb67eeb4a7fd6c.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3cfuns.com/notes/25101/33114eae47bbda0c50fb67eeb4a7fd6c.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;轻松监控上万台服务器：企业运维监控平台架构设计与实践指南&lt;br&gt;&lt;a href=&quot;http://dbaplus.cn/news-21-466-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dbaplus.cn/news-21-466-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mesos+Zookeeper+Marathon+Docker分布式集群管理最佳实践&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg==&amp;amp;mid=2650755658&amp;amp;idx=1&amp;amp;sn=9f5e4831b2c27d66e4296c49ffcd3d7c&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg==&amp;amp;mid=2650755658&amp;amp;idx=1&amp;amp;sn=9f5e4831b2c27d66e4296c49ffcd3d7c&amp;amp;scene=21#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网易蜂巢微服务架构：用RabbitMQ实现轻量级通信&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg==&amp;amp;mid=2650755639&amp;amp;idx=2&amp;amp;sn=0e43c1b7168dbcd60582326fb20f2f19&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg==&amp;amp;mid=2650755639&amp;amp;idx=2&amp;amp;sn=0e43c1b7168dbcd60582326fb20f2f19&amp;amp;scene=21#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用Vue.js从零构建GitHub项目浏览器&lt;br&gt;&lt;a href=&quot;http://xlbd.me/vue-demo-github-file-explorer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xlbd.me/vue-demo-github-file-explorer/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2016-06-07&quot;&gt;&lt;a href=&quot;#2016-06-07&quot; class=&quot;headerlink&quot; title=&quot;2016-06-07&quot;&gt;&lt;/a&gt;2016-06-07&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;搭建Git服务器&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gitlab centos一键安装&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/asd131531/article/details/42374285&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/asd131531/article/details/42374285&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.linuxidc.com/Linux/2014-08/105137.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.linuxidc.com/Linux/2014-08/105137.htm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-06&quot;&gt;&lt;a href=&quot;#2016-06&quot; class=&quot;headerlink&quot; title=&quot;2016-06&quot;&gt;&lt;/a&gt;2016-06&lt;/h2&gt;&lt;h3 id=&quot;2016-06-24&quot;&gt;&lt;a href=&quot;#2016-06-24&quot; class=&quot;head
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
      <category term="dev" scheme="http://yoursite.com/tags/dev/"/>
    
      <category term="collect" scheme="http://yoursite.com/tags/collect/"/>
    
      <category term="collect-of-dev" scheme="http://yoursite.com/tags/collect-of-dev/"/>
    
  </entry>
  
  <entry>
    <title>在单服务器上安装部署FastDFS+Nginx</title>
    <link href="http://yoursite.com/2016/07/07/%E5%9C%A8%E5%8D%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2FastDFS-Nginx/"/>
    <id>http://yoursite.com/2016/07/07/在单服务器上安装部署FastDFS-Nginx/</id>
    <published>2016-07-07T02:54:21.000Z</published>
    <updated>2016-07-07T14:04:19.326Z</updated>
    
    <content type="html">&lt;h1 id=&quot;在单服务器上安装部署FastDFS-Nginx&quot;&gt;&lt;a href=&quot;#在单服务器上安装部署FastDFS-Nginx&quot; class=&quot;headerlink&quot; title=&quot;在单服务器上安装部署FastDFS+Nginx&quot;&gt;&lt;/a&gt;在单服务器上安装部署FastDFS+Nginx&lt;/h1&gt;&lt;p&gt;那么多服务器和软件安装配置中，FastDFS算是比较复杂的一个了。&lt;br&gt;这个例子storage和tracker均部署在同一台服务器（ip：192.168.1.134）&lt;br&gt;我部署的服务系版本是centos6.7&lt;/p&gt;
&lt;h2 id=&quot;FastDFS安装配置&quot;&gt;&lt;a href=&quot;#FastDFS安装配置&quot; class=&quot;headerlink&quot; title=&quot;FastDFS安装配置&quot;&gt;&lt;/a&gt;FastDFS安装配置&lt;/h2&gt;&lt;h3 id=&quot;Tracker的安装及配置&quot;&gt;&lt;a href=&quot;#Tracker的安装及配置&quot; class=&quot;headerlink&quot; title=&quot;Tracker的安装及配置&quot;&gt;&lt;/a&gt;Tracker的安装及配置&lt;/h3&gt;&lt;h4 id=&quot;1-安装编译器&quot;&gt;&lt;a href=&quot;#1-安装编译器&quot; class=&quot;headerlink&quot; title=&quot;1.安装编译器&quot;&gt;&lt;/a&gt;1.安装编译器&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y gcc gcc-c++&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-下载安装libevent&quot;&gt;&lt;a href=&quot;#2-下载安装libevent&quot; class=&quot;headerlink&quot; title=&quot;2.下载安装libevent&quot;&gt;&lt;/a&gt;2.下载安装libevent&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://sourceforge.net/projects/levent/files/libevent/libevent-2.0/libevent-2.0.22-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xvzf libevent-2.0.22-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd libevent-2.0.22-stable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-下载安装fastDFS&quot;&gt;&lt;a href=&quot;#3-下载安装fastDFS&quot; class=&quot;headerlink&quot; title=&quot;3.下载安装fastDFS&quot;&gt;&lt;/a&gt;3.下载安装fastDFS&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://code.google.com/p/fastdfs/downloads/detail?name=FastDFS_v4.06.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;（code.google.com已无法访问，可以自己手动下载再上传到服务器）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xvzf FastDFS_v4.06.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd FastDFS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./make.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./make.sh install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装成功后/usr/local/bin下会出现一系列fastDFS命令&lt;/p&gt;
&lt;h4 id=&quot;4-配置tracker&quot;&gt;&lt;a href=&quot;#4-配置tracker&quot; class=&quot;headerlink&quot; title=&quot;4.配置tracker&quot;&gt;&lt;/a&gt;4.配置tracker&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/fdfs/tracker.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改base_path以存储tracker信息（这里不做修改，使用默认路径/home/yuqing/fastdfs，需要先行创建目录）&lt;/p&gt;
&lt;h4 id=&quot;5-启动tracker&quot;&gt;&lt;a href=&quot;#5-启动tracker&quot; class=&quot;headerlink&quot; title=&quot;5.启动tracker&quot;&gt;&lt;/a&gt;5.启动tracker&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Storage配置-gt-Storage1配置&quot;&gt;&lt;a href=&quot;#Storage配置-gt-Storage1配置&quot; class=&quot;headerlink&quot; title=&quot;Storage配置 -&amp;gt; Storage1配置&quot;&gt;&lt;/a&gt;Storage配置 -&amp;gt; Storage1配置&lt;/h3&gt;&lt;p&gt;正常情况下storage1部署一个服务器，storage2部署一个服务器，tracker部署一个服务器。&lt;br&gt;我这里只部署一个storage一个tracker，并部署在同一个服务器&lt;/p&gt;
&lt;h4 id=&quot;1-3：参考Tracker安装步骤&quot;&gt;&lt;a href=&quot;#1-3：参考Tracker安装步骤&quot; class=&quot;headerlink&quot; title=&quot;1~3：参考Tracker安装步骤&quot;&gt;&lt;/a&gt;1~3：参考Tracker安装步骤&lt;/h4&gt;&lt;h4 id=&quot;4-配置storage&quot;&gt;&lt;a href=&quot;#4-配置storage&quot; class=&quot;headerlink&quot; title=&quot;4.配置storage&quot;&gt;&lt;/a&gt;4.配置storage&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/fdfs/storage.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改tracker_server=192.168.1.134:22122&lt;br&gt;修改base_path以存储storage信息（这里不做修改，使用默认路径/home/yuqing/fastdfs，需要先行创建目录）&lt;br&gt;例子：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;base_path=/home/yuqing/fastdfs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store_path0=/home/yuqing/fastdfs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tracker_server=192.168.1.134:22122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.server_port=8080      #web server的端口改成8080（与nginx 端口一致）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-启动storage&quot;&gt;&lt;a href=&quot;#5-启动storage&quot; class=&quot;headerlink&quot; title=&quot;5.启动storage&quot;&gt;&lt;/a&gt;5.启动storage&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/bin/fdfs_storaged /etc/fdfs/storage.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动过程中，fastDFS会在base_path下的data目录中创建一系列文件夹，以存储数据&lt;/p&gt;
&lt;h3 id=&quot;安装nginx以及fastdfs-nginx-module模块&quot;&gt;&lt;a href=&quot;#安装nginx以及fastdfs-nginx-module模块&quot; class=&quot;headerlink&quot; title=&quot;安装nginx以及fastdfs-nginx-module模块&quot;&gt;&lt;/a&gt;安装nginx以及fastdfs-nginx-module模块&lt;/h3&gt;&lt;p&gt;nginx的rewrite模块和cache模块需要先安装pcre和openssl&lt;/p&gt;
&lt;h4 id=&quot;安装pcre&quot;&gt;&lt;a href=&quot;#安装pcre&quot; class=&quot;headerlink&quot; title=&quot;安装pcre&quot;&gt;&lt;/a&gt;安装pcre&lt;/h4&gt;&lt;p&gt;下载pcre&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf pcre-8.12.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd pcre-8.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装openssl&quot;&gt;&lt;a href=&quot;#安装openssl&quot; class=&quot;headerlink&quot; title=&quot;安装openssl&quot;&gt;&lt;/a&gt;安装openssl&lt;/h4&gt;&lt;p&gt;centos下解决办法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install openssl openssl-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装nginx&quot;&gt;&lt;a href=&quot;#安装nginx&quot; class=&quot;headerlink&quot; title=&quot;安装nginx&quot;&gt;&lt;/a&gt;安装nginx&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /home/yihua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://nginx.org/download/nginx-0.8.55.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf nginx-0.8.55.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd nginx-0.8.55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/opt/nginx --with-http_stub_status_module&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;安装fastdfs-nginx-module&quot;&gt;&lt;a href=&quot;#安装fastdfs-nginx-module&quot; class=&quot;headerlink&quot; title=&quot;安装fastdfs-nginx-module&quot;&gt;&lt;/a&gt;安装fastdfs-nginx-module&lt;/h4&gt;&lt;p&gt;下载并上传fastdfs-nginx-module_v1.15.tar.gz&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar xzf fastdfs-nginx-module_v1.15.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /home/yihua/nginx-0.8.55 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --add-module=/home/yihua/fastdfs-nginx-module/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;配置nginx和fastdfs-nginx-module&quot;&gt;&lt;a href=&quot;#配置nginx和fastdfs-nginx-module&quot; class=&quot;headerlink&quot; title=&quot;配置nginx和fastdfs-nginx-module&quot;&gt;&lt;/a&gt;配置nginx和fastdfs-nginx-module&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cp /home/yihua/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/fdfs/mod_fastdfs.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改 fastdfs的nginx模块的配置文件 mod_fastdfs.conf&lt;br&gt;一般只需改动以下几个参数即可：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;base_path=/home/yuqing/fastdfs      #保存日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tracker_server=192.168.1.134:22122    #tracker 服务器的 IP 地址以及端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storage_server_port=23000            #storage 服务器的端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1                    #当前服务器的 group 名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url_have_group_name = true           #文件 url 中是否有 group 名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store_path_count=1                   #存储路径个数，需要和 store_path 个数匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store_path0=/home/yuqing/fastdfs    #存储路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.need_find_content_type=true     # 从文件 扩展 名查 找 文件 类型 （ nginx 时 为true）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_count = 1                      #设置组的个数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在末尾添加分组信息，目前只有一个分组，就只写一个&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[group1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storage_server_port=23000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store_path_count=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store_path0=/home/yuqing/fastdfs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;建立 M00 至存储目录的符号连接&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ln -s /home/yuqing/fastdfs/data /home/yuqing/fastdfs/data/M00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将 server 段中的 listen 端口号改为 8080：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /usr/local/nginx/conf/nginx.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;listen       8080;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 server 段中添加fastdfs的配置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location /group1/M00 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       root   /home/yuqing/fastdfs/data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ngx_fastdfs_module;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;准备nginx启动脚本&quot;&gt;&lt;a href=&quot;#准备nginx启动脚本&quot; class=&quot;headerlink&quot; title=&quot;准备nginx启动脚本&quot;&gt;&lt;/a&gt;准备nginx启动脚本&lt;/h4&gt;&lt;p&gt;编辑 /etc/init.d/nginx，如下内容:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# nginx Startup script for the Nginx HTTP Server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# it is v.1.4.7 version.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# chkconfig: - 85 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# description: Nginx is a high-performance web and proxy server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# It has a lot of features, but it&amp;apos;s not for everyone.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# processname: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# pidfile: /usr/local/nginx/logs/nginx.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# config: /usr/local/nginx/conf/nginx.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginxd=/usr/local/nginx/sbin/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx_config=/usr/local/nginx/conf/nginx.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx_pid=/usr/local/nginx/logs/nginx.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx_lock=/var/lock/subsys/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RETVAL=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prog=&amp;quot;nginx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Source function library.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. /etc/rc.d/init.d/functions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Source networking configuration.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. /etc/sysconfig/network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Check that networking is up.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ $&amp;#123;NETWORKING&amp;#125; = &amp;quot;no&amp;quot; ] &amp;amp;&amp;amp; exit 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -x $nginxd ] || exit 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Start nginx daemons functions.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nginx_is_run=`ps -ef | egrep &amp;apos;nginx:\s*(worker|master)\s*process&amp;apos; | wc -l`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ $&amp;#123;nginx_is_run&amp;#125; -gt 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;nginx already running....&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo -n $&amp;quot;Starting $prog: &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    daemon $nginxd -c $&amp;#123;nginx_config&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RETVAL=$?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ $RETVAL = 0 ] &amp;amp;&amp;amp; touch $&amp;#123;nginx_lock&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return $RETVAL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Stop nginx daemons functions.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stop() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo -n $&amp;quot;Stopping $prog: &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    killproc $nginxd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RETVAL=$?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ $RETVAL = 0 ] &amp;amp;&amp;amp; rm -f $&amp;#123;nginx_lock&amp;#125; $&amp;#123;nginx_pid&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Reload nginx config file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reload() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo -n $&amp;quot;Reloading $prog: &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #kill -HUP `cat $&amp;#123;nginx_pid&amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    killproc $nginxd -HUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RETVAL=$?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# See how we were called.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case &amp;quot;$1&amp;quot; in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reload)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    restart)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status $prog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RETVAL=$?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo $&amp;quot;Usage: $prog &amp;#123;start|stop|restart|reload|status|help&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Nginx启动提示找不到libpcre.so.1解决方法&lt;br&gt;如果是32位系统&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ln -s /usr/local/lib/libpcre.so.1 /lib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果是64位系统&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ln -s /usr/local/lib/libpcre.so.1 /lib64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;启动nginx&quot;&gt;&lt;a href=&quot;#启动nginx&quot; class=&quot;headerlink&quot; title=&quot;启动nginx&quot;&gt;&lt;/a&gt;启动nginx&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# chmod u+x /etc/init.d/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# chkconfig --add nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# chkconfig nginx on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# service nginx start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在启动 nginx：                                           [确定]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# service nginx status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx (pid 26500) 正在运行...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看nginx的日志 错误日志logs/error.log 看是否有问题&lt;/p&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;h4 id=&quot;启动nginx，tracker和storage&quot;&gt;&lt;a href=&quot;#启动nginx，tracker和storage&quot; class=&quot;headerlink&quot; title=&quot;启动nginx，tracker和storage&quot;&gt;&lt;/a&gt;启动nginx，tracker和storage&lt;/h4&gt;&lt;p&gt;重启tracker：&lt;br&gt;/usr/local/bin/restart.sh /usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf&lt;br&gt;重启storage：&lt;br&gt;/usr/local/bin/restart.sh /usr/local/bin/fdfs_storaged /etc/fdfs/storage.conf&lt;br&gt;启动nginx：&lt;br&gt;/usr/local/nginx/sbin/nginx&lt;br&gt;检查nginx状态：&lt;br&gt;/usr/local/nginx/sbin/nginx -t&lt;br&gt;重启nginx：&lt;br&gt;/usr/local/nginx/sbin/nginx -s reload&lt;/p&gt;
&lt;h4 id=&quot;tracker运行&quot;&gt;&lt;a href=&quot;#tracker运行&quot; class=&quot;headerlink&quot; title=&quot;tracker运行&quot;&gt;&lt;/a&gt;tracker运行&lt;/h4&gt;&lt;p&gt;直接使用 fdfs_trackerd 来启动tracker进程，然后使用netstat 查看端口是否起来。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker fdfs]# fdfs_trackerd /etc/fdfs/tracker.conf restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker fdfs]# netstat -antp | grep trackerd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:22122               0.0.0.0:*                   LISTEN      14520/fdfs_trackerd &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker fdfs]#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;storage运行&quot;&gt;&lt;a href=&quot;#storage运行&quot; class=&quot;headerlink&quot; title=&quot;storage运行&quot;&gt;&lt;/a&gt;storage运行&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# fdfs_storaged /etc/fdfs/storage.conf restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看端口是否起来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# netstat -antp | grep storage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tcp        0      0 0.0.0.0:23000               0.0.0.0:*                   LISTEN      10316/fdfs_storaged&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以以下命令来监控服务器的状态&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# fdfs_monitor /etc/fdfs/client.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看到ACTIVE,就说明已经成功注册到了tracker。&lt;/p&gt;
&lt;h4 id=&quot;开机启动&quot;&gt;&lt;a href=&quot;#开机启动&quot; class=&quot;headerlink&quot; title=&quot;开机启动&quot;&gt;&lt;/a&gt;开机启动&lt;/h4&gt;&lt;p&gt;设置tracker开机自动启动&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker tracker]# echo &amp;quot;/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart&amp;quot; &amp;gt;&amp;gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker tracker]# cat /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# This script will be executed *after* all the other init scripts.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# You can put your own initialization stuff in here if you don&amp;apos;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# want to do the full Sys V style init stuff.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@tracker tracker]#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置storage开机启动&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@server1 fdfs]# echo &amp;quot;/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart&amp;quot; &amp;gt;&amp;gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@server1 fdfs]# cat /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# This script will be executed *after* all the other init scripts.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# You can put your own initialization stuff in here if you don&amp;apos;t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# want to do the full Sys V style init stuff.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用client测试文件上传&quot;&gt;&lt;a href=&quot;#使用client测试文件上传&quot; class=&quot;headerlink&quot; title=&quot;使用client测试文件上传&quot;&gt;&lt;/a&gt;使用client测试文件上传&lt;/h3&gt;&lt;p&gt;先配置一下client&lt;br&gt;vi /etc/fdfs/client.conf&lt;br&gt;保证一下配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;base_path=/home/yuqing/fastdfs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tracker_server=192.168.1.134:22122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.tracker_server_port=8080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;vi test.txt&lt;/p&gt;
&lt;p&gt;/usr/local/bin/fdfs_test /etc/fdfs/client.conf  upload  test.txt&lt;br&gt;得到：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This is FastDFS client test program v4.06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (C) 2008, Happy Fish / YuQing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FastDFS may be copied only under the terms of the GNU General&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Public License V3, which may be found in the FastDFS source kit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Please visit the FastDFS Home Page http://www.csource.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for more detail.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2016-07-06 07:31:57] DEBUG - base_path=/home/yuqing/fastdfs, connect_timeout=30, network_timeout=60, tracker_server_count=1, anti_steal_token=0, anti_steal_secret_key length=0, use_connection_pool=0, g_connection_pool_max_idle_time=3600s, use_storage_id=0, storage server id count: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tracker_query_storage_store_list_without_group:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server 1. group_name=, ip_addr=192.168.1.134, port=23000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1, ip_addr=192.168.1.134, port=23000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storage_upload_by_filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1, remote_filename=M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source ip address: 192.168.1.134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file timestamp=2016-07-06 07:31:57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file size=7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file crc32=3651826635&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file url: http://192.168.1.134:8080/group1/M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storage_upload_slave_by_filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group_name=group1, remote_filename=M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085_big.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source ip address: 192.168.1.134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file timestamp=2016-07-06 07:31:57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file size=7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file crc32=3651826635&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file url: http://192.168.1.134:8080/group1/M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085_big.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost yihua]# This is FastDFS client test program v4.06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-bash: This: command not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (C) 2008, Happy Fish / YuQing&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在浏览器打开&lt;a href=&quot;http://192.168.1.134:8080/group1/M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.1.134:8080/group1/M00/00/00/wKgBhld9Fl2ATSOYAAAAB9mqc8s085.txt&lt;/a&gt;&lt;br&gt;可以看见你的文件。那么就成功了。&lt;/p&gt;
&lt;p&gt;done.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在单服务器上安装部署FastDFS-Nginx&quot;&gt;&lt;a href=&quot;#在单服务器上安装部署FastDFS-Nginx&quot; class=&quot;headerlink&quot; title=&quot;在单服务器上安装部署FastDFS+Nginx&quot;&gt;&lt;/a&gt;在单服务器上安装部署FastDFS
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="centos" scheme="http://yoursite.com/tags/centos/"/>
    
      <category term="FastDFS" scheme="http://yoursite.com/tags/FastDFS/"/>
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
      <category term="图片服务器" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>项目管理建议</title>
    <link href="http://yoursite.com/2016/07/01/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BB%BA%E8%AE%AE/"/>
    <id>http://yoursite.com/2016/07/01/项目管理建议/</id>
    <published>2016-07-01T11:14:00.000Z</published>
    <updated>2016-07-07T14:04:19.329Z</updated>
    
    <content type="html">&lt;h1 id=&quot;对项目管理制度的一些看法和建议&quot;&gt;&lt;a href=&quot;#对项目管理制度的一些看法和建议&quot; class=&quot;headerlink&quot; title=&quot;对项目管理制度的一些看法和建议&quot;&gt;&lt;/a&gt;对项目管理制度的一些看法和建议&lt;/h1&gt;&lt;h2 id=&quot;当前存在的问题&quot;&gt;&lt;a href=&quot;#当前存在的问题&quot; class=&quot;headerlink&quot; title=&quot;当前存在的问题&quot;&gt;&lt;/a&gt;当前存在的问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;技术工程师反映，技术人员与业务隔离，技术人员难以熟悉第一手业务需求，对工程师开发出契合业务部分需求的产品造成一定的理解障碍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安卓、iOS、H5、后端、测试等各部门分而治之，缺乏一个强而有力的统筹推进，虽然增加了项目经理角色，但目前这个角色只能在各部门之间协调，仍然难以有力推动各部门按时按量完成进度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从业务到产品到开发到测试上线，这个流程还可以有优化的地方。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;分析和改进建议&quot;&gt;&lt;a href=&quot;#分析和改进建议&quot; class=&quot;headerlink&quot; title=&quot;分析和改进建议&quot;&gt;&lt;/a&gt;分析和改进建议&lt;/h2&gt;&lt;h3 id=&quot;针对问题1。&quot;&gt;&lt;a href=&quot;#针对问题1。&quot; class=&quot;headerlink&quot; title=&quot;针对问题1。&quot;&gt;&lt;/a&gt;针对问题1。&lt;/h3&gt;&lt;p&gt;使用尝试让项目经理或者技术经理在产需求研和产品评审阶段就参与介入，能够一定程度的和业务部分做到沟通，让技术人员更熟悉业务。即使只是旁听也好&lt;/p&gt;
&lt;h3 id=&quot;针对问题2。&quot;&gt;&lt;a href=&quot;#针对问题2。&quot; class=&quot;headerlink&quot; title=&quot;针对问题2。&quot;&gt;&lt;/a&gt;针对问题2。&lt;/h3&gt;&lt;p&gt;程序界有一句话，“没有完美的模型，但有一些能用。”&lt;br&gt;既然目前公司的情况是各部分分而治之，各施其职，那么可以考虑这样一个构思，产品对业务负责，提供产品的产出;测试则对产品负责，提供项目和模块完成情况；技术经理对项目经理负责，提供项目模块开发时间评估，以及开发产出；各开发工程师对技术经理负责，按时按量完成技术经理制定的模块开发计划。而项目经理则对项目的进度和协调负责，应该要有渠道能对接所有相关部门，跟进项目的进度，协调各方遇到的问题，并协助解决。&lt;br&gt;&lt;strong&gt;这样，明确各部门应该对谁负责，各部门遇到项目开发相关问题，也就能明确的找到相应的人员，得到反馈，部门之间也能够相互推动。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里推荐使用一个团队协作管理的工具：“Worktile”。&lt;/strong&gt;&lt;br&gt;Worktile可以在一个看板中看到所有在做、已完成、在测试等等所有流程中的任务和完成情况。&lt;br&gt;例如，技术经理可以列出所有需要完成的模块和任务，为之分配负责人。负责人开发完成后，勾选完成，管理人员就可以拖动任务进入测试流程。&lt;br&gt;如此一个可视化简单的团队协作管理。&lt;br&gt;当然这个功能，像禅道也能部分实现。但是禅道的这个功能并不好用，从实践经验来说，使用的人积极性并不高。而Worktile这类工具如果推动成功，开发的管理效率将会得到提高。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;各状态任务完成情况一览：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/project-002.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;完成任务，推动到另一状态：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/project-003.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;报表：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/project-004.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;团队日历：每个时间点要完成的任务也会在此显示&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/project-005.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;针对问题3&quot;&gt;&lt;a href=&quot;#针对问题3&quot; class=&quot;headerlink&quot; title=&quot;针对问题3.&quot;&gt;&lt;/a&gt;针对问题3.&lt;/h3&gt;&lt;p&gt;以门店收银机为例，发现存在一些流程上的问题。&lt;br&gt;&lt;strong&gt;首先，说接口，有两个问题。&lt;/strong&gt;&lt;br&gt;一，客户端和服务端接口文档，用的是word文档沟通，各个人员直接相互传递，很可能导致相互之间接口文档不同步，也就会造成开发期间关于接口的一些扯皮。&lt;br&gt;二，虽然接口文档有了，但是客户端还是要等服务端出接口后，才能进行接口接入后的相关开发，这样前端的进度就要依赖于后端的产出。&lt;br&gt;既然有这样的问题，那么有没有改进办法呢？有的，这里推荐使用阿里开源的“RAP”接口管理工具进行接口管理。&lt;br&gt;RAP对我们接口开发的帮助有：&lt;br&gt;1）可视化结构化的接口编辑和管理。这样接口只有服务器上的一份，并且管理简单。&lt;br&gt;2）生成Mock数据、校验真实接口的正确性。有了Mock功能，前端可以在后端提供接口之前，利用rap提供的模拟接口数据，提前进行接口接入的开发，提高前端开发速度。最重要的是，前后端接口开发解耦。&lt;br&gt;&lt;img src=&quot;/images/project-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次，说说测试和螺旋式开发。&lt;/strong&gt;&lt;br&gt;测试本身是一个发现细节的过程，有些问题测试到细节的地方，就会出现值得推敲和不断调试的情况。而我们项目留给测试的时间太少了。而前期，没完成之前，测试在等待开发，同时，最后所有模块大致完成才提测，又一股脑挤在后期测试和迭代，时间难免太紧，很容易导致进度延误。&lt;br&gt;&lt;strong&gt;这里的建议是，开发应该在项目开始时就梳理出模块间的依赖情况，前后端协调好应该先开发哪些模块，只要有一个模块开发完成，就马上提测。&lt;/strong&gt;如此让测试尽早介入测试，达到项目螺旋式迭代推荐的目的。同时，也能让测试的时间合理分配，避免延误。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;对项目管理制度的一些看法和建议&quot;&gt;&lt;a href=&quot;#对项目管理制度的一些看法和建议&quot; class=&quot;headerlink&quot; title=&quot;对项目管理制度的一些看法和建议&quot;&gt;&lt;/a&gt;对项目管理制度的一些看法和建议&lt;/h1&gt;&lt;h2 id=&quot;当前存在的问题&quot;&gt;&lt;a h
    
    </summary>
    
    
      <category term="RAP" scheme="http://yoursite.com/tags/RAP/"/>
    
      <category term="manager" scheme="http://yoursite.com/tags/manager/"/>
    
      <category term="项目管理" scheme="http://yoursite.com/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="Worktile" scheme="http://yoursite.com/tags/Worktile/"/>
    
  </entry>
  
  <entry>
    <title>[api_version]4种在springmvc中进行api版本控制的处理方法</title>
    <link href="http://yoursite.com/2016/06/28/api-version-4%E7%A7%8D%E5%9C%A8springmvc%E4%B8%AD%E8%BF%9B%E8%A1%8Capi%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2016/06/28/api-version-4种在springmvc中进行api版本控制的处理方法/</id>
    <published>2016-06-28T07:31:54.000Z</published>
    <updated>2016-06-30T15:56:59.038Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/mindhaq/restapi-versioning-spring.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mindhaq/restapi-versioning-spring.git&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/augusto/restVersioning.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/augusto/restVersioning.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这两个git项目里提供了4种在springmvc中进行api版本控制的处理方法，你们看怎么样，能否不使用冗余部署的方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;/api/v1/xxx&lt;br&gt;controller中的方法注解写法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@ResponseBody&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@RequestMapping(value = &amp;quot;/apiurl/&amp;#123;version&amp;#125;/hello&amp;quot;, method = GET, produces = APPLICATION_JSON_VALUE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public Hello sayHelloWorldUrl(@PathVariable final ValidVersion version) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new Hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/api/xxx&lt;br&gt;在header中添加”X-API-Version”:”v1”来进行版本请求的区别&lt;br&gt;controller中的方法注解写法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@ResponseBody&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@RequestMapping(value = &amp;quot;/apiheader/hello&amp;quot;, method = GET, produces = APPLICATION_JSON_VALUE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public Hello sayHelloWorldHeader(@RequestHeader(&amp;quot;X-API-Version&amp;quot;) final ValidVersion version) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new Hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/api/xxx&lt;br&gt;在header中添加Accept: “application/vnd.company.app-v1+json”来进行版本区别&lt;br&gt;controller中的方法注解写法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@ResponseBody&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@RequestMapping(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = &amp;quot;/apiaccept/hello&amp;quot;, method = GET,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    produces = &amp;#123;&amp;quot;application/vnd.company.app-v1+json&amp;quot;, &amp;quot;application/vnd.company.app-v2+json&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/api/xxx&lt;br&gt;在header中添加Accept: “application/vnd.company.app-v1+json”来进行版本区别&lt;br&gt;controller写法：&lt;br&gt;```&lt;br&gt;@Controller&lt;br&gt;@VersionedResource(media = “application/vnd.app.resource”)&lt;br&gt;public class TestController {&lt;/p&gt;
&lt;p&gt; @RequestMapping(value = {“/resource”}, method = RequestMethod.GET)&lt;br&gt; @VersionedResource(from = “1.0”, to = “1.0”)&lt;br&gt; @ResponseBody&lt;br&gt; public Resource getResource_v1() {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return new Resource(&amp;quot;1.0&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; }&lt;/p&gt;
&lt;p&gt; @RequestMapping(value = {“/resource”}, method = RequestMethod.GET)&lt;br&gt; @VersionedResource(from = “2.0”)&lt;br&gt; @ResponseBody&lt;br&gt; public Resource getResource_v2_onwards() {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return new Resource(&amp;quot;2.0&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; }&lt;br&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mindhaq/restapi-versioning-spring.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mindhaq/restapi-vers
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="api_verion" scheme="http://yoursite.com/tags/api-verion/"/>
    
      <category term="spring mvc" scheme="http://yoursite.com/tags/spring-mvc/"/>
    
  </entry>
  
  <entry>
    <title>[dev][collect][2016-06-06]collect-of-im-netty-android-etc</title>
    <link href="http://yoursite.com/2016/06/06/dev-collect-2016-06-06-collect-of-im-netty-android-etc/"/>
    <id>http://yoursite.com/2016/06/06/dev-collect-2016-06-06-collect-of-im-netty-android-etc/</id>
    <published>2016-06-06T09:42:22.000Z</published>
    <updated>2016-06-06T13:07:42.450Z</updated>
    
    <content type="html">&lt;p&gt;此集合[dev][collect]汇总开发资源.&lt;br&gt;资源含文章，git code等等..&lt;/p&gt;
&lt;h3 id=&quot;2016-06-06&quot;&gt;&lt;a href=&quot;#2016-06-06&quot; class=&quot;headerlink&quot; title=&quot;2016-06-06&quot;&gt;&lt;/a&gt;2016-06-06&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一套仿 微信 IM系统 基于apache mina&lt;br&gt;&lt;a href=&quot;http://my.oschina.net/u/1167637/blog/411312&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://my.oschina.net/u/1167637/blog/411312&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;socketio 服务器推送&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/xtayfjpk/article/details/40948409&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/xtayfjpk/article/details/40948409&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开放源码,基于springMVC+springSecurity3.x+Mybaits3.x的权限系统,,支持开源&lt;br&gt;&lt;a href=&quot;https://github.com/caprice/lanyuan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/caprice/lanyuan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simple asynchronous non blocking chat server/client based on Netty 4&lt;br&gt;&lt;a href=&quot;https://github.com/caprice/nettychat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/caprice/nettychat&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/nettychat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/nettychat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[5][android]A High Copy WeChat ,SNS APP (高仿微信)&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/wechat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/wechat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个Android开发者博客&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/finddreams&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/finddreams&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;案例剖析：从0开始搭建一个微服务的持续交付系统&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659597380&amp;amp;idx=1&amp;amp;sn=e0087759e6b65df0ba30126c1e3af915&amp;amp;scene=0#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659597380&amp;amp;idx=1&amp;amp;sn=e0087759e6b65df0ba30126c1e3af915&amp;amp;scene=0#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[5][android]这是一个可用于Android快速开发的框架，集成了很多项目中通用的东西，免去重复造轮子的麻烦，直接下载来了，修改一下就可以做为基础的框架进行开发，提高开发速度，适合当前移动互联网时代敏捷快速开发的节奏&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/Android_BaseLib&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/Android_BaseLib&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用Netty实现IMServer，方便的Entity解码编码机制，融合到二进制协议中&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/netty-chat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/netty-chat&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;仿淘宝的B2C商城项目&lt;br&gt;页面用的jsp，稍显陈旧&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/B2CWeb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/B2CWeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaEE项目开发脚手架&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/es&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/es&lt;/a&gt;&lt;br&gt;后端:&lt;br&gt;IoC容器 spring&lt;br&gt;web框架 springmvc&lt;br&gt;orm框架 hibernate + spring data jpa&lt;br&gt;安全框架 shiro&lt;br&gt;验证框架 hibernate validator&lt;br&gt;任务调度框架 quartz&lt;br&gt;缓存 ehcache&lt;br&gt;数据源 druid&lt;br&gt;日志 slf4j+logback&lt;br&gt;Json fastjson&lt;br&gt;日期美化 prettytime&lt;br&gt;servlet 3.0(需要支持servlet3的servlet容器，如tomcat7)&lt;br&gt;jcaptcha 验证码&lt;br&gt;jsp 模板视图&lt;br&gt;前端:&lt;br&gt;jquery js框架&lt;br&gt;jquery-ui-bootstrap界面框架&lt;br&gt;font-wesome 字体/图标框架&lt;br&gt;jquery Validation Engine 验证框架（配合spring的验证框架，页面验证简化不少）&lt;br&gt;kindeditor 编辑器&lt;br&gt;nicescroll 漂亮的滚动条&lt;br&gt;zTree 树框架&lt;br&gt;jquery blockUI 弹出框/遮罩框架&lt;br&gt;jquery-fileupload 文件上传&lt;br&gt;bootstrap-datatimepicker 日历选择&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[5][android]Collect and classify android open source projects&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/android-open-project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/android-open-project&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blog avec Spring MVC + spring DATA + mongodb + angularjs&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/blog_java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/blog_java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dianping-api-samples&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/dianping-open-sdk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/dianping-open-sdk&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JeeSite 是一个企业信息管理系统基础框架，Java EE（J2EE）快速开发框架，使用经典技术组合（Spring、Spring MVC、Apache Shiro、Hibernate、Bootstrap UI），包括核心模块如：组织机构、用户、权限授权、内容管理、工作流等。&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/jeesite&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/jeesite&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Demos of Apache MINA User Guide《Apache MINA 2 用户指南》中文翻译，文中用到的例子源码 &lt;a href=&quot;https://github.com/waylau/apache-mina-2.x-user-guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/apache-mina-2.x-user-guide&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/waylau/apache-mina-2-user-guide-demos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/apache-mina-2-user-guide-demos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring Framework 4.x Reference Documentation 中文翻译&lt;br&gt;&lt;a href=&quot;https://www.gitbook.com/book/waylau/spring-framework-4-reference/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gitbook.com/book/waylau/spring-framework-4-reference/details&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/waylau/spring-framework-4-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/spring-framework-4-reference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;免费的计算机编程类中文书籍&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/free-programming-books-zh_CN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/free-programming-books-zh_CN&lt;/a&gt;&lt;br&gt;网页版：&lt;br&gt;&lt;a href=&quot;http://siberiawolf.com/free_programming/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://siberiawolf.com/free_programming/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个合格的程序员应该读过哪些书&lt;br&gt;&lt;a href=&quot;http://justjavac.com/other/2012/05/15/qualified-programmer-should-read-what-books.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://justjavac.com/other/2012/05/15/qualified-programmer-should-read-what-books.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google 全球 IP 地址库&lt;br&gt;&lt;a href=&quot;https://github.com/justjavac/Google-IPs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/justjavac/Google-IPs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一份关于“资料汇总”的汇总&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/awesome-awesomeness-zh_CN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/awesome-awesomeness-zh_CN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Freely available programming books&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/free-programming-books&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/free-programming-books&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RESTful API 设计参考文献列表，可帮助你更加彻底的了解REST风格的接口设计&lt;br&gt;&lt;a href=&quot;https://github.com/aisuhua/restful-api-design-references&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/aisuhua/restful-api-design-references&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ssential Netty in Action 《Netty 实战(精髓)》&lt;br&gt;&lt;a href=&quot;https://github.com/waylau/essential-netty-in-action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/essential-netty-in-action&lt;/a&gt;&lt;br&gt;gitbook：&lt;br&gt;&lt;a href=&quot;http://waylau.com/essential-netty-in-action/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://waylau.com/essential-netty-in-action/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gradle 2 User Guide 中文翻译《Gradle 2 用户指南》&lt;br&gt;&lt;a href=&quot;https://github.com/waylau/Gradle-2-User-Guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/Gradle-2-User-Guide&lt;/a&gt;&lt;br&gt;gitbook：&lt;br&gt;&lt;a href=&quot;https://www.gitbook.com/book/waylau/gradle-2-user-guide/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gitbook.com/book/waylau/gradle-2-user-guide/details&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netty 4.x User Guide 中文翻译《Netty 4.x 用户指南》&lt;br&gt;&lt;a href=&quot;https://github.com/waylau/netty-4-user-guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/waylau/netty-4-user-guide&lt;/a&gt;&lt;br&gt;gitbook：&lt;br&gt;&lt;a href=&quot;http://waylau.com/netty-4-user-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://waylau.com/netty-4-user-guide/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这是一个整理即时通讯（IM）和社交系统（SNS）优秀开源项目的文档，项目上传github欢迎提交更新&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/Perfect_IM_SNS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/Perfect_IM_SNS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于位置信息，空间时间结合的社交与分享的应用&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/Tuyi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/Tuyi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SYTeamApp：基于环信平台进行开发，旨在打造的高效团队沟通的移动客户端，供企业内部协作使用、适应移动办公需要，提升企业沟通协同效率，增强企业办公管理效率。（当前仅实现了用户登入登出功能、通讯功能、投票功能。）&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/SYTeamApp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/SYTeamApp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MeifuGO：An open source android app by using easemob IM SDK&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/MeifuGO&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/MeifuGO&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fangyuanshili：环信SDK,IM,geohash,lbs&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/fangyuanshili&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/fangyuanshili&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;zaina：该项目是改编自环信即时通讯云的demo改编&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/zaina&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/zaina&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dianhua：基于react native 和 环信的实时通话的免费店话&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/dianhua&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/dianhua&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Baby：一个私密社交APP&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/Baby&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/Baby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MVPCommon：一个集成了众多开源项目的Android MVP框架以及应用搭建，全程博客更新。&lt;br&gt;a common Architecture and project build with blogs releasing based on MVP，integrates many Open Source Projects ,to make your developing quicker and easier.&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/MVPCommon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/MVPCommon&lt;/a&gt;&lt;br&gt;从零开始搭建android框架系列：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/notebooks/3767449/latest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/notebooks/3767449/latest&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;learnCloud：&lt;br&gt;和应用服务器、存储服务器说再见&lt;br&gt;再也不用租服务器，也不用写后端代码了。LeanCloud 提供一站式后端云服务，从数据存储、实时聊天、消息推送到移动统计，涵盖应用开发的多方面后端需求。&lt;br&gt;&lt;a href=&quot;https://leancloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leancloud.cn/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不容错过，最全的安卓架构合集【从零开始搭建android框架系列（2）】&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/1f21e1d375aa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/1f21e1d375aa&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安卓架构文章合集（a collection of android Architecture）&lt;br&gt;&lt;a href=&quot;https://github.com/YihuaWanglv/AndroidArchitectureCollection&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YihuaWanglv/AndroidArchitectureCollection&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此集合[dev][collect]汇总开发资源.&lt;br&gt;资源含文章，git code等等..&lt;/p&gt;
&lt;h3 id=&quot;2016-06-06&quot;&gt;&lt;a href=&quot;#2016-06-06&quot; class=&quot;headerlink&quot; title=&quot;2016-06-06&quot;&gt;&lt;/a&gt;20
    
    </summary>
    
    
      <category term="dev" scheme="http://yoursite.com/tags/dev/"/>
    
      <category term="collect" scheme="http://yoursite.com/tags/collect/"/>
    
      <category term="post" scheme="http://yoursite.com/tags/post/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="resouce" scheme="http://yoursite.com/tags/resouce/"/>
    
  </entry>
  
  <entry>
    <title>[git]git分支使用和管理</title>
    <link href="http://yoursite.com/2016/06/06/git-git%E5%88%86%E6%94%AF%E4%BD%BF%E7%94%A8%E5%92%8C%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2016/06/06/git-git分支使用和管理/</id>
    <published>2016-06-06T09:37:36.000Z</published>
    <updated>2016-06-06T13:06:22.607Z</updated>
    
    <content type="html">&lt;h2 id=&quot;git分支常用命令&quot;&gt;&lt;a href=&quot;#git分支常用命令&quot; class=&quot;headerlink&quot; title=&quot;git分支常用命令&quot;&gt;&lt;/a&gt;git分支常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;从master创建dev分支，并checkout dev分支：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;此命令相当于：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;回到master，合并dev的更改到master：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merge dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;合并后删除dev分支：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch -d dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果直接用git merge dev合并分支，git使用的是fast forward的模式，并不会留下commit历史，如果想要留下commit历史，就要加上--no-ff参数，并使用-m添加commit描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merge --no-ff -m &amp;quot;merge with no-ff&amp;quot; dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;保存临时状态&quot;&gt;&lt;a href=&quot;#保存临时状态&quot; class=&quot;headerlink&quot; title=&quot;保存临时状态&quot;&gt;&lt;/a&gt;保存临时状态&lt;/h2&gt;&lt;p&gt;当你正在dev分支进行开发，还没有开发完成能提交，此时突然有一个线上版本的bug要紧急修复，这个时候你就需要用到git stash功能，保存正在开发的dev分支的状态&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;保存当前开发状态：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看当前已保存的stash列表：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;取出之前保存的stash状态：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash pop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;多人协作的工作模式&quot;&gt;&lt;a href=&quot;#多人协作的工作模式&quot; class=&quot;headerlink&quot; title=&quot;多人协作的工作模式&quot;&gt;&lt;/a&gt;多人协作的工作模式&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;多人协作的工作模式通常是这样：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;首先，可以试图用git push origin branch-name推送自己的修改；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果合并有冲突，则解决冲突，并在本地提交；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这就是多人协作的工作模式，一旦熟悉了，就非常简单。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;小结&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看远程库信息，使用git remote -v；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地新建的分支如果不推送到远程，对其他人就是不可见的；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git分支常用命令&quot;&gt;&lt;a href=&quot;#git分支常用命令&quot; class=&quot;headerlink&quot; title=&quot;git分支常用命令&quot;&gt;&lt;/a&gt;git分支常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="branch" scheme="http://yoursite.com/tags/branch/"/>
    
      <category term="版本控制" scheme="http://yoursite.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="分支管理" scheme="http://yoursite.com/tags/%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Windows下开启React-Native征途</title>
    <link href="http://yoursite.com/2016/06/04/Windows%E4%B8%8B%E5%BC%80%E5%90%AFReact-Native%E5%BE%81%E9%80%94/"/>
    <id>http://yoursite.com/2016/06/04/Windows下开启React-Native征途/</id>
    <published>2016-06-04T01:55:48.000Z</published>
    <updated>2016-06-04T02:26:01.845Z</updated>
    
    <content type="html">&lt;p&gt;我们的目标是星辰大海（说白了就是同一个东西咱不想Android做一份，iOS又做一份），现在我们要开启React-Native的征途（在Windows下）。&lt;br&gt;不过说出来你可能不太相信，这故事的开头，来的并没有想象中的困难。&lt;/p&gt;
&lt;p&gt;以下是过程：&lt;/p&gt;
&lt;h2 id=&quot;1-安装Nodejs&quot;&gt;&lt;a href=&quot;#1-安装Nodejs&quot; class=&quot;headerlink&quot; title=&quot;1. 安装Nodejs&quot;&gt;&lt;/a&gt;1. 安装Nodejs&lt;/h2&gt;&lt;p&gt;React Native要求是4.0以上。&lt;/p&gt;
&lt;h2 id=&quot;2-安装react-native-cli&quot;&gt;&lt;a href=&quot;#2-安装react-native-cli&quot; class=&quot;headerlink&quot; title=&quot;2. 安装react-native-cli&quot;&gt;&lt;/a&gt;2. 安装react-native-cli&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g react-native-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-初始化第一个项目&quot;&gt;&lt;a href=&quot;#3-初始化第一个项目&quot; class=&quot;headerlink&quot; title=&quot;3. 初始化第一个项目&quot;&gt;&lt;/a&gt;3. 初始化第一个项目&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;react-native init TestProject&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化第一个测试Demo，init的时候可能需要一点时间. 伟大的目标值的那么些耐心的等待。&lt;/p&gt;
&lt;h2 id=&quot;4-设置环境变量&quot;&gt;&lt;a href=&quot;#4-设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;4. 设置环境变量&quot;&gt;&lt;/a&gt;4. 设置环境变量&lt;/h2&gt;&lt;p&gt;设置环境变量ANDROID_HOME指向Android SDK的目录&lt;br&gt;eg:&lt;br&gt;&lt;img src=&quot;/images/react-001.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-安装Genymotion模拟器&quot;&gt;&lt;a href=&quot;#5-安装Genymotion模拟器&quot; class=&quot;headerlink&quot; title=&quot;5. 安装Genymotion模拟器&quot;&gt;&lt;/a&gt;5. 安装Genymotion模拟器&lt;/h2&gt;&lt;p&gt;Genymotion官网下载安装Genymotion模拟器，并创建Android emulator。&lt;br&gt;创建实例后，将得到如下画面：&lt;br&gt;&lt;img src=&quot;/images/react-002.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;Genymotion运行Android模拟实例需要VirtualBox和AndroidSdk的支持。&lt;br&gt;安装Genymotion后默认的VirtualBox和AndroidSdk不好使，我通过Setting设置配置好自己本地的VirtualBox和AndroidSdk。&lt;br&gt;设置VirtualBox&lt;br&gt;&lt;img src=&quot;/images/react-003.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;设置sdk&lt;br&gt;&lt;img src=&quot;/images/react-004.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;配置好后，就把模拟的Android实例启动起来放着吧。&lt;/p&gt;
&lt;h2 id=&quot;6-启动&quot;&gt;&lt;a href=&quot;#6-启动&quot; class=&quot;headerlink&quot; title=&quot;6. 启动&quot;&gt;&lt;/a&gt;6. 启动&lt;/h2&gt;&lt;h3 id=&quot;1-启动React-Native-Server&quot;&gt;&lt;a href=&quot;#1-启动React-Native-Server&quot; class=&quot;headerlink&quot; title=&quot;1-启动React Native Server&quot;&gt;&lt;/a&gt;1-启动React Native Server&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;react-native start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/react-005.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-开一个新的命令行终端-cmd-切换到项目目录安装APP&quot;&gt;&lt;a href=&quot;#2-开一个新的命令行终端-cmd-切换到项目目录安装APP&quot; class=&quot;headerlink&quot; title=&quot;2-开一个新的命令行终端(cmd), 切换到项目目录安装APP&quot;&gt;&lt;/a&gt;2-开一个新的命令行终端(cmd), 切换到项目目录安装APP&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd android&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew.bat installDebug&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行gradlew.bat installDebug时，需要先正常打开Genymotion模拟器，否则build 和 install会报错。&lt;br&gt;&lt;img src=&quot;/images/react-006.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;安装成功后，在Genymotion里手动打开APP ，正常的话，你就可以看到React-Native的欢迎画面。&lt;br&gt;&lt;img src=&quot;/images/react-007.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Windows下的React Native开发环境搭建 – done.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们的目标是星辰大海（说白了就是同一个东西咱不想Android做一份，iOS又做一份），现在我们要开启React-Native的征途（在Windows下）。&lt;br&gt;不过说出来你可能不太相信，这故事的开头，来的并没有想象中的困难。&lt;/p&gt;
&lt;p&gt;以下是过程：&lt;/p&gt;
&lt;h2 
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="react-native" scheme="http://yoursite.com/tags/react-native/"/>
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
      <category term="windows" scheme="http://yoursite.com/tags/windows/"/>
    
  </entry>
  
</feed>
